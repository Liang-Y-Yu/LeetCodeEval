{"Question":{"Data":{"Question":{"questionFrontendId":"172","questionId":"172","Content":"<p>Given an integer <code>n</code>, return <em>the number of trailing zeroes in </em><code>n!</code>.</p>\n\n<p>Note that <code>n! = n * (n - 1) * (n - 2) * ... * 3 * 2 * 1</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 3\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> 3! = 6, no trailing zero.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 5\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> 5! = 120, one trailing zero.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 0\n<strong>Output:</strong> 0\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= n &lt;= 10<sup>4</sup></code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong> Could you write a solution that works in logarithmic time complexity?</p>\n","SampleTestCase":"3","ExampleTestcases":"3\n5\n0","Difficulty":"Medium","Title":"Factorial Trailing Zeroes","TitleSlug":"factorial-trailing-zeroes","IsPaidOnly":false,"Stats":"{\"totalAccepted\": \"571.4K\", \"totalSubmission\": \"1.3M\", \"totalAcceptedRaw\": 571377, \"totalSubmissionRaw\": 1270729, \"acRate\": \"45.0%\"}","Likes":3388,"Dislikes":1978,"FreqBar":0,"CategoryTitle":"Algorithms","TopicTags":[{"Id":"VG9waWNUYWdOb2RlOjg=","Name":"Math","Slug":"math"}],"CodeSnippets":[{"Lang":"C++","LangSlug":"cpp","Code":"class Solution {\npublic:\n    int trailingZeroes(int n) {\n        \n    }\n};"},{"Lang":"Java","LangSlug":"java","Code":"class Solution {\n    public int trailingZeroes(int n) {\n        \n    }\n}"},{"Lang":"Python","LangSlug":"python","Code":"class Solution(object):\n    def trailingZeroes(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: int\n        \"\"\"\n        "},{"Lang":"Python3","LangSlug":"python3","Code":"class Solution:\n    def trailingZeroes(self, n: int) -> int:\n        "},{"Lang":"C","LangSlug":"c","Code":"int trailingZeroes(int n) {\n    \n}"},{"Lang":"C#","LangSlug":"csharp","Code":"public class Solution {\n    public int TrailingZeroes(int n) {\n        \n    }\n}"},{"Lang":"JavaScript","LangSlug":"javascript","Code":"/**\n * @param {number} n\n * @return {number}\n */\nvar trailingZeroes = function(n) {\n    \n};"},{"Lang":"TypeScript","LangSlug":"typescript","Code":"function trailingZeroes(n: number): number {\n    \n};"},{"Lang":"PHP","LangSlug":"php","Code":"class Solution {\n\n    /**\n     * @param Integer $n\n     * @return Integer\n     */\n    function trailingZeroes($n) {\n        \n    }\n}"},{"Lang":"Swift","LangSlug":"swift","Code":"class Solution {\n    func trailingZeroes(_ n: Int) -> Int {\n        \n    }\n}"},{"Lang":"Kotlin","LangSlug":"kotlin","Code":"class Solution {\n    fun trailingZeroes(n: Int): Int {\n        \n    }\n}"},{"Lang":"Dart","LangSlug":"dart","Code":"class Solution {\n  int trailingZeroes(int n) {\n    \n  }\n}"},{"Lang":"Go","LangSlug":"golang","Code":"func trailingZeroes(n int) int {\n    \n}"},{"Lang":"Ruby","LangSlug":"ruby","Code":"# @param {Integer} n\n# @return {Integer}\ndef trailing_zeroes(n)\n    \nend"},{"Lang":"Scala","LangSlug":"scala","Code":"object Solution {\n    def trailingZeroes(n: Int): Int = {\n        \n    }\n}"},{"Lang":"Rust","LangSlug":"rust","Code":"impl Solution {\n    pub fn trailing_zeroes(n: i32) -> i32 {\n        \n    }\n}"},{"Lang":"Racket","LangSlug":"racket","Code":"(define/contract (trailing-zeroes n)\n  (-> exact-integer? exact-integer?)\n  )"},{"Lang":"Erlang","LangSlug":"erlang","Code":"-spec trailing_zeroes(N :: integer()) -> integer().\ntrailing_zeroes(N) ->\n  ."},{"Lang":"Elixir","LangSlug":"elixir","Code":"defmodule Solution do\n  @spec trailing_zeroes(n :: integer) :: integer\n  def trailing_zeroes(n) do\n    \n  end\nend"}],"CompanyTagStats":""}},"DownloadedAt":"2025-07-18T14:49:41.687705782+02:00","AcRate":"45.0","TotalSubmissions":1270729,"TotalAccepted":571377,"AcceptanceRate":0.4496450462687166,"ContentFeatures":"","CodeSnippetFeatures":{"c":"","cpp":"","csharp":"","dart":"","elixir":"","erlang":"","golang":"","java":"","javascript":"","kotlin":"","php":"","python":"","python3":"","racket":"","ruby":"","rust":"","scala":"","swift":"","typescript":""},"Url":"https://leetcode.com/problems/factorial-trailing-zeroes/"},"Solutions":{"se-gpt-4o":{"Lang":"python3","Prompt":"Hi, this is a coding interview. You will be given:\n* A problem statement (with sample test cases if available).\n* A starter code snippet (with fixed function signatures).\n\nPlease write your solution in the python3 programming language. Your code must:\n* Solve the problem fully and correctly.\n* Pass all provided sample test cases.\n* Run within acceptable time and memory limits (assume large inputs if none are specified).\n* Follow good coding practices (clear logic, readable structure, appropriate use of language features).\n\nHere is the problem statement: Given an integer n, return the number of trailing zeroes in n!.\nNote that n! = n * (n - 1) * (n - 2) * ... * 3 * 2 * 1.\n \nExample 1:\nInput: n = 3\nOutput: 0\nExplanation: 3! = 6, no trailing zero.\nExample 2:\nInput: n = 5\nOutput: 1\nExplanation: 5! = 120, one trailing zero.\nExample 3:\nInput: n = 0\nOutput: 0\n \nConstraints:\n\t0 <= n <= 10^4\n \nFollow up: Could you write a solution that works in logarithmic time complexity?\n\nHere is the code snippet, which you should expand with your solution: class Solution:\n    def trailingZeroes(self, n: int) -> int:\n        \n\nImportant Requirements:\n* Do not change any provided function signatures, class names, or method names.\n* Output only valid source code that can be executed as-is, without any further improvements or bugfixes.\n* Do not include docstrings, markdown, or commentary in your final code.\n\nGood luck!\n","Answer":"```python\nclass Solution:\n    def trailingZeroes(self, n: int) -> int:\n        count = 0\n        while n >= 5:\n            n //= 5\n            count += n\n        return count\n```","TypedCode":"\nclass Solution:\n    def trailingZeroes(self, n: int) -> int:\n        count = 0\n        while n >= 5:\n            n //= 5\n            count += n\n        return count\n","Model":"gpt-4o-2024-08-06","Latency":1071753423,"SolvedAt":"2025-07-18T15:07:28.612171005+02:00","PromptTokens":363,"OutputTokens":51}},"Submissions":{"se-gpt-4o":{"SubmitRequest":{"lang":"python3","question_id":"172","typed_code":"\nclass Solution:\n    def trailingZeroes(self, n: int) -> int:\n        count = 0\n        while n >= 5:\n            n //= 5\n            count += n\n        return count\n"},"SubmissionId":1725416602,"CheckResponse":{"status_code":10,"status_msg":"Accepted","Finished":true,"State":"SUCCESS"},"SubmittedAt":"2025-08-06T10:50:22.668908326+02:00"}}}
