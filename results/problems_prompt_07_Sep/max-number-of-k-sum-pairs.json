{"Question":{"Data":{"Question":{"questionFrontendId":"1679","questionId":"1798","Content":"<p>You are given an integer array <code>nums</code> and an integer <code>k</code>.</p>\n\n<p>In one operation, you can pick two numbers from the array whose sum equals <code>k</code> and remove them from the array.</p>\n\n<p>Return <em>the maximum number of operations you can perform on the array</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,4], k = 5\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> Starting with nums = [1,2,3,4]:\n- Remove numbers 1 and 4, then nums = [2,3]\n- Remove numbers 2 and 3, then nums = []\nThere are no more pairs that sum up to 5, hence a total of 2 operations.</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,1,3,4,3], k = 6\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> Starting with nums = [3,1,3,4,3]:\n- Remove the first two 3&#39;s, then nums = [1,4,3]\nThere are no more pairs that sum up to 6, hence a total of 1 operation.</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n\t<li><code>1 &lt;= k &lt;= 10<sup>9</sup></code></li>\n</ul>\n","SampleTestCase":"[1,2,3,4]\n5","ExampleTestcases":"[1,2,3,4]\n5\n[3,1,3,4,3]\n6","Difficulty":"Medium","Title":"Max Number of K-Sum Pairs","TitleSlug":"max-number-of-k-sum-pairs","IsPaidOnly":false,"Stats":"{\"totalAccepted\": \"528.2K\", \"totalSubmission\": \"933.9K\", \"totalAcceptedRaw\": 528152, \"totalSubmissionRaw\": 933885, \"acRate\": \"56.6%\"}","Likes":3456,"Dislikes":112,"FreqBar":0,"CategoryTitle":"Algorithms","TopicTags":[{"Id":"VG9waWNUYWdOb2RlOjU=","Name":"Array","Slug":"array"},{"Id":"VG9waWNUYWdOb2RlOjY=","Name":"Hash Table","Slug":"hash-table"},{"Id":"VG9waWNUYWdOb2RlOjk=","Name":"Two Pointers","Slug":"two-pointers"},{"Id":"VG9waWNUYWdOb2RlOjYxMDQ5","Name":"Sorting","Slug":"sorting"}],"CodeSnippets":[{"Lang":"C++","LangSlug":"cpp","Code":"class Solution {\npublic:\n    int maxOperations(vector<int>& nums, int k) {\n        \n    }\n};"},{"Lang":"Java","LangSlug":"java","Code":"class Solution {\n    public int maxOperations(int[] nums, int k) {\n        \n    }\n}"},{"Lang":"Python","LangSlug":"python","Code":"class Solution(object):\n    def maxOperations(self, nums, k):\n        \"\"\"\n        :type nums: List[int]\n        :type k: int\n        :rtype: int\n        \"\"\"\n        "},{"Lang":"Python3","LangSlug":"python3","Code":"class Solution:\n    def maxOperations(self, nums: List[int], k: int) -> int:\n        "},{"Lang":"C","LangSlug":"c","Code":"\n\nint maxOperations(int* nums, int numsSize, int k){\n\n}"},{"Lang":"C#","LangSlug":"csharp","Code":"public class Solution {\n    public int MaxOperations(int[] nums, int k) {\n        \n    }\n}"},{"Lang":"JavaScript","LangSlug":"javascript","Code":"/**\n * @param {number[]} nums\n * @param {number} k\n * @return {number}\n */\nvar maxOperations = function(nums, k) {\n    \n};"},{"Lang":"TypeScript","LangSlug":"typescript","Code":"function maxOperations(nums: number[], k: number): number {\n\n};"},{"Lang":"PHP","LangSlug":"php","Code":"class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @param Integer $k\n     * @return Integer\n     */\n    function maxOperations($nums, $k) {\n        \n    }\n}"},{"Lang":"Swift","LangSlug":"swift","Code":"class Solution {\n    func maxOperations(_ nums: [Int], _ k: Int) -> Int {\n        \n    }\n}"},{"Lang":"Kotlin","LangSlug":"kotlin","Code":"class Solution {\n    fun maxOperations(nums: IntArray, k: Int): Int {\n        \n    }\n}"},{"Lang":"Go","LangSlug":"golang","Code":"func maxOperations(nums []int, k int) int {\n    \n}"},{"Lang":"Ruby","LangSlug":"ruby","Code":"# @param {Integer[]} nums\n# @param {Integer} k\n# @return {Integer}\ndef max_operations(nums, k)\n    \nend"},{"Lang":"Scala","LangSlug":"scala","Code":"object Solution {\n    def maxOperations(nums: Array[Int], k: Int): Int = {\n        \n    }\n}"},{"Lang":"Rust","LangSlug":"rust","Code":"impl Solution {\n    pub fn max_operations(nums: Vec<i32>, k: i32) -> i32 {\n        \n    }\n}"}],"CompanyTagStats":""}},"DownloadedAt":"2025-09-07T14:32:21.772740247+02:00","AcRate":"56.6","TotalSubmissions":933885,"TotalAccepted":528152,"AcceptanceRate":0.5655428666270472,"ContentFeatures":"","CodeSnippetFeatures":{"c":"","cpp":"","csharp":"","golang":"","java":"","javascript":"","kotlin":"","php":"","python":"","python3":"","ruby":"","rust":"","scala":"","swift":"","typescript":""},"Url":"https://leetcode.com/problems/max-number-of-k-sum-pairs/"},"Solutions":{"se-gpt-4o":{"Lang":"python3","Prompt":"Hi, this is a coding interview. You will be given:\n* A problem statement (with sample test cases if available).\n* A starter code snippet (with fixed function signatures).\n\nPlease write your solution in the python3 programming language. Your code must:\n* Solve the problem fully and correctly.\n* Pass all provided sample test cases.\n* Run within acceptable time and memory limits (assume large inputs if none are specified).\n* Follow good coding practices (clear logic, readable structure, appropriate use of language features).\n\nHere is the problem statement: You are given an integer array nums and an integer k.\nIn one operation, you can pick two numbers from the array whose sum equals k and remove them from the array.\nReturn the maximum number of operations you can perform on the array.\n \nExample 1:\nInput: nums = [1,2,3,4], k = 5\nOutput: 2\nExplanation: Starting with nums = [1,2,3,4]:\n- Remove numbers 1 and 4, then nums = [2,3]\n- Remove numbers 2 and 3, then nums = []\nThere are no more pairs that sum up to 5, hence a total of 2 operations.\nExample 2:\nInput: nums = [3,1,3,4,3], k = 6\nOutput: 1\nExplanation: Starting with nums = [3,1,3,4,3]:\n- Remove the first two 3's, then nums = [1,4,3]\nThere are no more pairs that sum up to 6, hence a total of 1 operation.\n \nConstraints:\n\t1 <= nums.length <= 10^5\n\t1 <= nums[i] <= 10^9\n\t1 <= k <= 10^9\n\nHere is the code snippet, which you should expand with your solution: class Solution:\n    def maxOperations(self, nums: List[int], k: int) -> int:\n        \n\nImportant Requirements:\n* Do not change any provided function signatures, class names, or method names.\n* Output only valid source code that can be executed as-is, without any further improvements or bugfixes.\n* Do not include docstrings, markdown, or commentary in your final code.\n\nGood luck!\n","Answer":"```python\nfrom typing import List\nfrom collections import Counter\n\nclass Solution:\n    def maxOperations(self, nums: List[int], k: int) -> int:\n        count = Counter(nums)\n        operations = 0\n        \n        for num in nums:\n            complement = k - num\n            if count[num] > 0 and count[complement] > 0:\n                if num == complement and count[num] < 2:\n                    continue\n                operations += 1\n                count[num] -= 1\n                count[complement] -= 1\n                \n        return operations\n```","TypedCode":"\nfrom typing import List\nfrom collections import Counter\n\nclass Solution:\n    def maxOperations(self, nums: List[int], k: int) -> int:\n        count = Counter(nums)\n        operations = 0\n        \n        for num in nums:\n            complement = k - num\n            if count[num] > 0 and count[complement] > 0:\n                if num == complement and count[num] < 2:\n                    continue\n                operations += 1\n                count[num] -= 1\n                count[complement] -= 1\n                \n        return operations\n","Model":"gpt-4o-2024-08-06","Latency":1176699722,"SolvedAt":"2025-09-07T14:47:33.177972631+02:00","PromptTokens":476,"OutputTokens":123}},"Submissions":{"se-gpt-4o":{"SubmitRequest":{"lang":"python3","question_id":"1798","typed_code":"\nfrom typing import List\nfrom collections import Counter\n\nclass Solution:\n    def maxOperations(self, nums: List[int], k: int) -> int:\n        count = Counter(nums)\n        operations = 0\n        \n        for num in nums:\n            complement = k - num\n            if count[num] > 0 and count[complement] > 0:\n                if num == complement and count[num] < 2:\n                    continue\n                operations += 1\n                count[num] -= 1\n                count[complement] -= 1\n                \n        return operations\n"},"SubmissionId":1762682911,"CheckResponse":{"status_code":10,"status_msg":"Accepted","Finished":true,"State":"SUCCESS"},"SubmittedAt":"2025-09-07T15:19:28.058669096+02:00"}}}
