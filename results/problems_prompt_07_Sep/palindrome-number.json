{"Question":{"Data":{"Question":{"questionFrontendId":"9","questionId":"9","Content":"<p>Given an integer <code>x</code>, return <code>true</code><em> if </em><code>x</code><em> is a </em><span data-keyword=\"palindrome-integer\"><em><strong>palindrome</strong></em></span><em>, and </em><code>false</code><em> otherwise</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> x = 121\n<strong>Output:</strong> true\n<strong>Explanation:</strong> 121 reads as 121 from left to right and from right to left.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> x = -121\n<strong>Output:</strong> false\n<strong>Explanation:</strong> From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> x = 10\n<strong>Output:</strong> false\n<strong>Explanation:</strong> Reads 01 from right to left. Therefore it is not a palindrome.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>-2<sup>31</sup>&nbsp;&lt;= x &lt;= 2<sup>31</sup>&nbsp;- 1</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow up:</strong> Could you solve it without converting the integer to a string?","SampleTestCase":"121","ExampleTestcases":"121\n-121\n10","Difficulty":"Easy","Title":"Palindrome Number","TitleSlug":"palindrome-number","IsPaidOnly":false,"Stats":"{\"totalAccepted\": \"6.9M\", \"totalSubmission\": \"11.6M\", \"totalAcceptedRaw\": 6917290, \"totalSubmissionRaw\": 11607230, \"acRate\": \"59.6%\"}","Likes":14643,"Dislikes":2854,"FreqBar":0,"CategoryTitle":"Algorithms","TopicTags":[{"Id":"VG9waWNUYWdOb2RlOjg=","Name":"Math","Slug":"math"}],"CodeSnippets":[{"Lang":"C++","LangSlug":"cpp","Code":"class Solution {\npublic:\n    bool isPalindrome(int x) {\n        \n    }\n};"},{"Lang":"Java","LangSlug":"java","Code":"class Solution {\n    public boolean isPalindrome(int x) {\n        \n    }\n}"},{"Lang":"Python","LangSlug":"python","Code":"class Solution(object):\n    def isPalindrome(self, x):\n        \"\"\"\n        :type x: int\n        :rtype: bool\n        \"\"\"\n        "},{"Lang":"Python3","LangSlug":"python3","Code":"class Solution:\n    def isPalindrome(self, x: int) -> bool:\n        "},{"Lang":"C","LangSlug":"c","Code":"bool isPalindrome(int x) {\n    \n}"},{"Lang":"C#","LangSlug":"csharp","Code":"public class Solution {\n    public bool IsPalindrome(int x) {\n        \n    }\n}"},{"Lang":"JavaScript","LangSlug":"javascript","Code":"/**\n * @param {number} x\n * @return {boolean}\n */\nvar isPalindrome = function(x) {\n    \n};"},{"Lang":"TypeScript","LangSlug":"typescript","Code":"function isPalindrome(x: number): boolean {\n    \n};"},{"Lang":"PHP","LangSlug":"php","Code":"class Solution {\n\n    /**\n     * @param Integer $x\n     * @return Boolean\n     */\n    function isPalindrome($x) {\n        \n    }\n}"},{"Lang":"Swift","LangSlug":"swift","Code":"class Solution {\n    func isPalindrome(_ x: Int) -> Bool {\n        \n    }\n}"},{"Lang":"Kotlin","LangSlug":"kotlin","Code":"class Solution {\n    fun isPalindrome(x: Int): Boolean {\n        \n    }\n}"},{"Lang":"Dart","LangSlug":"dart","Code":"class Solution {\n  bool isPalindrome(int x) {\n    \n  }\n}"},{"Lang":"Go","LangSlug":"golang","Code":"func isPalindrome(x int) bool {\n    \n}"},{"Lang":"Ruby","LangSlug":"ruby","Code":"# @param {Integer} x\n# @return {Boolean}\ndef is_palindrome(x)\n    \nend"},{"Lang":"Scala","LangSlug":"scala","Code":"object Solution {\n    def isPalindrome(x: Int): Boolean = {\n        \n    }\n}"},{"Lang":"Rust","LangSlug":"rust","Code":"impl Solution {\n    pub fn is_palindrome(x: i32) -> bool {\n        \n    }\n}"},{"Lang":"Racket","LangSlug":"racket","Code":"(define/contract (is-palindrome x)\n  (-> exact-integer? boolean?)\n  )"},{"Lang":"Erlang","LangSlug":"erlang","Code":"-spec is_palindrome(X :: integer()) -> boolean().\nis_palindrome(X) ->\n  ."},{"Lang":"Elixir","LangSlug":"elixir","Code":"defmodule Solution do\n  @spec is_palindrome(x :: integer) :: boolean\n  def is_palindrome(x) do\n    \n  end\nend"}],"CompanyTagStats":""}},"DownloadedAt":"2025-09-07T14:34:36.408116548+02:00","AcRate":"59.6","TotalSubmissions":11607230,"TotalAccepted":6917290,"AcceptanceRate":0.5959466642773513,"ContentFeatures":"","CodeSnippetFeatures":{"c":"","cpp":"","csharp":"","dart":"","elixir":"","erlang":"","golang":"","java":"","javascript":"","kotlin":"","php":"","python":"","python3":"","racket":"","ruby":"","rust":"","scala":"","swift":"","typescript":""},"Url":"https://leetcode.com/problems/palindrome-number/"},"Solutions":{"se-gpt-4o":{"Lang":"python3","Prompt":"Hi, this is a coding interview. You will be given:\n* A problem statement (with sample test cases if available).\n* A starter code snippet (with fixed function signatures).\n\nPlease write your solution in the python3 programming language. Your code must:\n* Solve the problem fully and correctly.\n* Pass all provided sample test cases.\n* Run within acceptable time and memory limits (assume large inputs if none are specified).\n* Follow good coding practices (clear logic, readable structure, appropriate use of language features).\n\nHere is the problem statement: Given an integer x, return true if x is a palindrome, and false otherwise.\n \nExample 1:\nInput: x = 121\nOutput: true\nExplanation: 121 reads as 121 from left to right and from right to left.\nExample 2:\nInput: x = -121\nOutput: false\nExplanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.\nExample 3:\nInput: x = 10\nOutput: false\nExplanation: Reads 01 from right to left. Therefore it is not a palindrome.\n \nConstraints:\n\t-2^31 <= x <= 2^31 - 1\n \nFollow up: Could you solve it without converting the integer to a string?\n\nHere is the code snippet, which you should expand with your solution: class Solution:\n    def isPalindrome(self, x: int) -> bool:\n        \n\nImportant Requirements:\n* Do not change any provided function signatures, class names, or method names.\n* Output only valid source code that can be executed as-is, without any further improvements or bugfixes.\n* Do not include docstrings, markdown, or commentary in your final code.\n\nGood luck!\n","Answer":"```python\nclass Solution:\n    def isPalindrome(self, x: int) -> bool:\n        if x < 0:\n            return False\n        \n        original = x\n        reversed_num = 0\n        \n        while x > 0:\n            digit = x % 10\n            reversed_num = reversed_num * 10 + digit\n            x //= 10\n        \n        return original == reversed_num\n```","TypedCode":"\nclass Solution:\n    def isPalindrome(self, x: int) -> bool:\n        if x < 0:\n            return False\n        \n        original = x\n        reversed_num = 0\n        \n        while x > 0:\n            digit = x % 10\n            reversed_num = reversed_num * 10 + digit\n            x //= 10\n        \n        return original == reversed_num\n","Model":"gpt-4o-2024-08-06","Latency":881909678,"SolvedAt":"2025-09-07T14:48:30.548853125+02:00","PromptTokens":374,"OutputTokens":85}},"Submissions":{"se-gpt-4o":{"SubmitRequest":{"lang":"python3","question_id":"9","typed_code":"\nclass Solution:\n    def isPalindrome(self, x: int) -> bool:\n        if x < 0:\n            return False\n        \n        original = x\n        reversed_num = 0\n        \n        while x > 0:\n            digit = x % 10\n            reversed_num = reversed_num * 10 + digit\n            x //= 10\n        \n        return original == reversed_num\n"},"SubmissionId":1762688108,"CheckResponse":{"status_code":10,"status_msg":"Accepted","Finished":true,"State":"SUCCESS"},"SubmittedAt":"2025-09-07T15:25:03.865256292+02:00"}}}
