{"Question":{"Data":{"Question":{"questionFrontendId":"55","questionId":"55","Content":"<p>You are given an integer array <code>nums</code>. You are initially positioned at the array&#39;s <strong>first index</strong>, and each element in the array represents your maximum jump length at that position.</p>\n\n<p>Return <code>true</code><em> if you can reach the last index, or </em><code>false</code><em> otherwise</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,3,1,1,4]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> Jump 1 step from index 0 to 1, then 3 steps to the last index.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,2,1,0,4]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> You will always arrive at index 3 no matter what. Its maximum jump length is 0, which makes it impossible to reach the last index.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 10<sup>5</sup></code></li>\n</ul>\n","SampleTestCase":"[2,3,1,1,4]","ExampleTestcases":"[2,3,1,1,4]\n[3,2,1,0,4]","Difficulty":"Medium","Title":"Jump Game","TitleSlug":"jump-game","IsPaidOnly":false,"Stats":"{\"totalAccepted\": \"2.8M\", \"totalSubmission\": \"7M\", \"totalAcceptedRaw\": 2805407, \"totalSubmissionRaw\": 7035624, \"acRate\": \"39.9%\"}","Likes":21015,"Dislikes":1426,"FreqBar":0,"CategoryTitle":"Algorithms","TopicTags":[{"Id":"VG9waWNUYWdOb2RlOjU=","Name":"Array","Slug":"array"},{"Id":"VG9waWNUYWdOb2RlOjEz","Name":"Dynamic Programming","Slug":"dynamic-programming"},{"Id":"VG9waWNUYWdOb2RlOjE3","Name":"Greedy","Slug":"greedy"}],"CodeSnippets":[{"Lang":"C++","LangSlug":"cpp","Code":"class Solution {\npublic:\n    bool canJump(vector<int>& nums) {\n        \n    }\n};"},{"Lang":"Java","LangSlug":"java","Code":"class Solution {\n    public boolean canJump(int[] nums) {\n        \n    }\n}"},{"Lang":"Python","LangSlug":"python","Code":"class Solution(object):\n    def canJump(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: bool\n        \"\"\"\n        "},{"Lang":"Python3","LangSlug":"python3","Code":"class Solution:\n    def canJump(self, nums: List[int]) -> bool:\n        "},{"Lang":"C","LangSlug":"c","Code":"bool canJump(int* nums, int numsSize) {\n    \n}"},{"Lang":"C#","LangSlug":"csharp","Code":"public class Solution {\n    public bool CanJump(int[] nums) {\n        \n    }\n}"},{"Lang":"JavaScript","LangSlug":"javascript","Code":"/**\n * @param {number[]} nums\n * @return {boolean}\n */\nvar canJump = function(nums) {\n    \n};"},{"Lang":"TypeScript","LangSlug":"typescript","Code":"function canJump(nums: number[]): boolean {\n    \n};"},{"Lang":"PHP","LangSlug":"php","Code":"class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @return Boolean\n     */\n    function canJump($nums) {\n        \n    }\n}"},{"Lang":"Swift","LangSlug":"swift","Code":"class Solution {\n    func canJump(_ nums: [Int]) -> Bool {\n        \n    }\n}"},{"Lang":"Kotlin","LangSlug":"kotlin","Code":"class Solution {\n    fun canJump(nums: IntArray): Boolean {\n        \n    }\n}"},{"Lang":"Dart","LangSlug":"dart","Code":"class Solution {\n  bool canJump(List<int> nums) {\n    \n  }\n}"},{"Lang":"Go","LangSlug":"golang","Code":"func canJump(nums []int) bool {\n    \n}"},{"Lang":"Ruby","LangSlug":"ruby","Code":"# @param {Integer[]} nums\n# @return {Boolean}\ndef can_jump(nums)\n    \nend"},{"Lang":"Scala","LangSlug":"scala","Code":"object Solution {\n    def canJump(nums: Array[Int]): Boolean = {\n        \n    }\n}"},{"Lang":"Rust","LangSlug":"rust","Code":"impl Solution {\n    pub fn can_jump(nums: Vec<i32>) -> bool {\n        \n    }\n}"},{"Lang":"Racket","LangSlug":"racket","Code":"(define/contract (can-jump nums)\n  (-> (listof exact-integer?) boolean?)\n  )"},{"Lang":"Erlang","LangSlug":"erlang","Code":"-spec can_jump(Nums :: [integer()]) -> boolean().\ncan_jump(Nums) ->\n  ."},{"Lang":"Elixir","LangSlug":"elixir","Code":"defmodule Solution do\n  @spec can_jump(nums :: [integer]) :: boolean\n  def can_jump(nums) do\n    \n  end\nend"}],"CompanyTagStats":""}},"DownloadedAt":"2025-09-07T14:31:31.341873916+02:00","AcRate":"39.9","TotalSubmissions":7035624,"TotalAccepted":2805407,"AcceptanceRate":0.3987431676280597,"ContentFeatures":"","CodeSnippetFeatures":{"c":"","cpp":"","csharp":"","dart":"","elixir":"","erlang":"","golang":"","java":"","javascript":"","kotlin":"","php":"","python":"","python3":"","racket":"","ruby":"","rust":"","scala":"","swift":"","typescript":""},"Url":"https://leetcode.com/problems/jump-game/"},"Solutions":{"se-gpt-4o":{"Lang":"python3","Prompt":"Hi, this is a coding interview. You will be given:\n* A problem statement (with sample test cases if available).\n* A starter code snippet (with fixed function signatures).\n\nPlease write your solution in the python3 programming language. Your code must:\n* Solve the problem fully and correctly.\n* Pass all provided sample test cases.\n* Run within acceptable time and memory limits (assume large inputs if none are specified).\n* Follow good coding practices (clear logic, readable structure, appropriate use of language features).\n\nHere is the problem statement: You are given an integer array nums. You are initially positioned at the array's first index, and each element in the array represents your maximum jump length at that position.\nReturn true if you can reach the last index, or false otherwise.\n \nExample 1:\nInput: nums = [2,3,1,1,4]\nOutput: true\nExplanation: Jump 1 step from index 0 to 1, then 3 steps to the last index.\nExample 2:\nInput: nums = [3,2,1,0,4]\nOutput: false\nExplanation: You will always arrive at index 3 no matter what. Its maximum jump length is 0, which makes it impossible to reach the last index.\n \nConstraints:\n\t1 <= nums.length <= 10^4\n\t0 <= nums[i] <= 10^5\n\nHere is the code snippet, which you should expand with your solution: class Solution:\n    def canJump(self, nums: List[int]) -> bool:\n        \n\nImportant Requirements:\n* Do not change any provided function signatures, class names, or method names.\n* Output only valid source code that can be executed as-is, without any further improvements or bugfixes.\n* Do not include docstrings, markdown, or commentary in your final code.\n\nGood luck!\n","Answer":"```python\nfrom typing import List\n\nclass Solution:\n    def canJump(self, nums: List[int]) -> bool:\n        max_reachable = 0\n        n = len(nums)\n        for i in range(n):\n            if i > max_reachable:\n                return False\n            max_reachable = max(max_reachable, i + nums[i])\n            if max_reachable >= n - 1:\n                return True\n        return max_reachable >= n - 1\n```","TypedCode":"\nfrom typing import List\n\nclass Solution:\n    def canJump(self, nums: List[int]) -> bool:\n        max_reachable = 0\n        n = len(nums)\n        for i in range(n):\n            if i > max_reachable:\n                return False\n            max_reachable = max(max_reachable, i + nums[i])\n            if max_reachable >= n - 1:\n                return True\n        return max_reachable >= n - 1\n","Model":"gpt-4o-2024-08-06","Latency":898577173,"SolvedAt":"2025-09-07T14:46:55.380221059+02:00","PromptTokens":386,"OutputTokens":101}},"Submissions":{"se-gpt-4o":{"SubmitRequest":{"lang":"python3","question_id":"55","typed_code":"\nfrom typing import List\n\nclass Solution:\n    def canJump(self, nums: List[int]) -> bool:\n        max_reachable = 0\n        n = len(nums)\n        for i in range(n):\n            if i > max_reachable:\n                return False\n            max_reachable = max(max_reachable, i + nums[i])\n            if max_reachable >= n - 1:\n                return True\n        return max_reachable >= n - 1\n"},"SubmissionId":1762679198,"CheckResponse":{"status_code":10,"status_msg":"Accepted","Finished":true,"State":"SUCCESS"},"SubmittedAt":"2025-09-07T15:15:30.37386256+02:00"}}}
