{"Question":{"Data":{"Question":{"questionFrontendId":"283","questionId":"283","Content":"<p>Given an integer array <code>nums</code>, move all <code>0</code>&#39;s to the end of it while maintaining the relative order of the non-zero elements.</p>\n\n<p><strong>Note</strong> that you must do this in-place without making a copy of the array.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [0,1,0,3,12]\n<strong>Output:</strong> [1,3,12,0,0]\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [0]\n<strong>Output:</strong> [0]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>-2<sup>31</sup> &lt;= nums[i] &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow up:</strong> Could you minimize the total number of operations done?","SampleTestCase":"[0,1,0,3,12]","ExampleTestcases":"[0,1,0,3,12]\n[0]","Difficulty":"Easy","Title":"Move Zeroes","TitleSlug":"move-zeroes","IsPaidOnly":false,"Stats":"{\"totalAccepted\": \"4.3M\", \"totalSubmission\": \"6.8M\", \"totalAcceptedRaw\": 4275029, \"totalSubmissionRaw\": 6790074, \"acRate\": \"63.0%\"}","Likes":18234,"Dislikes":540,"FreqBar":0,"CategoryTitle":"Algorithms","TopicTags":[{"Id":"VG9waWNUYWdOb2RlOjU=","Name":"Array","Slug":"array"},{"Id":"VG9waWNUYWdOb2RlOjk=","Name":"Two Pointers","Slug":"two-pointers"}],"CodeSnippets":[{"Lang":"C++","LangSlug":"cpp","Code":"class Solution {\npublic:\n    void moveZeroes(vector<int>& nums) {\n        \n    }\n};"},{"Lang":"Java","LangSlug":"java","Code":"class Solution {\n    public void moveZeroes(int[] nums) {\n        \n    }\n}"},{"Lang":"Python","LangSlug":"python","Code":"class Solution(object):\n    def moveZeroes(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: None Do not return anything, modify nums in-place instead.\n        \"\"\"\n        "},{"Lang":"Python3","LangSlug":"python3","Code":"class Solution:\n    def moveZeroes(self, nums: List[int]) -> None:\n        \"\"\"\n        Do not return anything, modify nums in-place instead.\n        \"\"\"\n        "},{"Lang":"C","LangSlug":"c","Code":"void moveZeroes(int* nums, int numsSize) {\n    \n}"},{"Lang":"C#","LangSlug":"csharp","Code":"public class Solution {\n    public void MoveZeroes(int[] nums) {\n        \n    }\n}"},{"Lang":"JavaScript","LangSlug":"javascript","Code":"/**\n * @param {number[]} nums\n * @return {void} Do not return anything, modify nums in-place instead.\n */\nvar moveZeroes = function(nums) {\n    \n};"},{"Lang":"TypeScript","LangSlug":"typescript","Code":"/**\n Do not return anything, modify nums in-place instead.\n */\nfunction moveZeroes(nums: number[]): void {\n    \n};"},{"Lang":"PHP","LangSlug":"php","Code":"class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @return NULL\n     */\n    function moveZeroes(&$nums) {\n        \n    }\n}"},{"Lang":"Swift","LangSlug":"swift","Code":"class Solution {\n    func moveZeroes(_ nums: inout [Int]) {\n        \n    }\n}"},{"Lang":"Kotlin","LangSlug":"kotlin","Code":"class Solution {\n    fun moveZeroes(nums: IntArray): Unit {\n        \n    }\n}"},{"Lang":"Dart","LangSlug":"dart","Code":"class Solution {\n  void moveZeroes(List<int> nums) {\n    \n  }\n}"},{"Lang":"Go","LangSlug":"golang","Code":"func moveZeroes(nums []int)  {\n    \n}"},{"Lang":"Ruby","LangSlug":"ruby","Code":"# @param {Integer[]} nums\n# @return {Void} Do not return anything, modify nums in-place instead.\ndef move_zeroes(nums)\n    \nend"},{"Lang":"Scala","LangSlug":"scala","Code":"object Solution {\n    def moveZeroes(nums: Array[Int]): Unit = {\n        \n    }\n}"},{"Lang":"Rust","LangSlug":"rust","Code":"impl Solution {\n    pub fn move_zeroes(nums: &mut Vec<i32>) {\n        \n    }\n}"}],"CompanyTagStats":""}},"DownloadedAt":"2025-08-07T09:16:12.460330888+02:00","AcRate":"63.0","TotalSubmissions":6790074,"TotalAccepted":4275029,"AcceptanceRate":0.6295997657757485,"ContentFeatures":"","CodeSnippetFeatures":{"c":"","cpp":"","csharp":"","dart":"","golang":"","java":"","javascript":"","kotlin":"","php":"","python":"","python3":"","ruby":"","rust":"","scala":"","swift":"","typescript":""},"Url":"https://leetcode.com/problems/move-zeroes/"},"Solutions":{"se-gpt-4o":{"Lang":"python3","Prompt":"Multi-agent approach:\n1. Analysis\n2. Design\n3. Implementation\n4. Verification","Answer":"=== ANALYSIS ===\n```python\nclass Solution:\n    def moveZeroes(self, nums: List[int]) -> None:\n        zero_pos = 0  # position to place the next non-zero element\n        \n        for i in range(len(nums)):\n            if nums[i] != 0:\n                nums[zero_pos], nums[i] = nums[i], nums[zero_pos]\n                zero_pos += 1\n```\n\n=== DESIGN ===\n```python\nclass Solution:\n    def moveZeroes(self, nums: List[int]) -> None:\n        zero_pos = 0  # position to place the next non-zero element\n        \n        for i in range(len(nums)):\n            if nums[i] != 0:\n                nums[zero_pos], nums[i] = nums[i], nums[zero_pos]\n                zero_pos += 1\n```\n\n### Solution Design\n\n1. **Algorithm Choice**: The approach used for solving the problem is a two-pointer technique. This method efficiently allows the rearrangement of elements in-place without using additional space.\n\n2. **Step-by-Step Approach**:\n   - Initialize a pointer `zero_pos` to track the position where the next non-zero element will be placed.\n   - Iterate through each element of the array using a pointer `i`.\n   - For each element, check if it is non-zero.\n   - If it is non-zero, swap the current element with the element in the `zero_pos`.\n   - Increment the `zero_pos` to point to the next position where a non-zero should be placed.\n   - By the end of the iteration, all zeros will have been pushed to the back while maintaining the order of non-zero elements.\n\n3. **Data Structures**: We only use the list `nums` and integer variables for indexing. No additional data structure is required.\n\n4. **Time Complexity**: The time complexity of this approach is O(n), where n is the number of elements in the `nums`. This is because each element is processed once.\n\n5. **Space Complexity**: The space complexity is O(1) as the operation is done in-place and no additional storage is used.\n\n6. **Pseudocode**:\n   ```\n   function moveZeroes(nums):\n       zero_pos = 0\n       for i from 0 to length of nums - 1:\n           if nums[i] is not zero:\n               swap nums[zero_pos] with nums[i]\n               increment zero_pos\n   ```\n\nBy executing the swap only when a non-zero element is found, the solution minimizes unnecessary operations and follows the constraint of modifying the array in-place.\n\n=== IMPLEMENTATION ===\n```python\nclass Solution:\n    def moveZeroes(self, nums: List[int]) -> None:\n        zero_pos = 0\n        for i in range(len(nums)):\n            if nums[i] != 0:\n                nums[zero_pos], nums[i] = nums[i], nums[zero_pos]\n                zero_pos += 1\n```\n\n=== VERIFICATION ===\n```python\nclass Solution:\n    def moveZeroes(self, nums: List[int]) -> None:\n        zero_pos = 0\n        for i in range(len(nums)):\n            if nums[i] != 0:\n                nums[zero_pos], nums[i] = nums[i], nums[zero_pos]\n                zero_pos += 1\n```\n\n","TypedCode":"\nclass Solution:\n    def moveZeroes(self, nums: List[int]) -> None:\n        zero_pos = 0\n        for i in range(len(nums)):\n            if nums[i] != 0:\n                nums[zero_pos], nums[i] = nums[i], nums[zero_pos]\n                zero_pos += 1\n","Model":"se-gpt-4o","Latency":8094243176,"SolvedAt":"2025-08-07T09:44:29.17799795+02:00","PromptTokens":3323,"OutputTokens":669}},"Submissions":{"se-gpt-4o":{"SubmitRequest":{"lang":"python3","question_id":"283","typed_code":"\nclass Solution:\n    def moveZeroes(self, nums: List[int]) -> None:\n        zero_pos = 0\n        for i in range(len(nums)):\n            if nums[i] != 0:\n                nums[zero_pos], nums[i] = nums[i], nums[zero_pos]\n                zero_pos += 1\n"},"SubmissionId":1726609290,"CheckResponse":{"status_code":10,"status_msg":"Accepted","Finished":true,"State":"SUCCESS"},"SubmittedAt":"2025-08-07T10:14:31.081060591+02:00"}}}
