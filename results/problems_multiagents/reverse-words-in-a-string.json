{"Question":{"Data":{"Question":{"questionFrontendId":"151","questionId":"151","Content":"<p>Given an input string <code>s</code>, reverse the order of the <strong>words</strong>.</p>\n\n<p>A <strong>word</strong> is defined as a sequence of non-space characters. The <strong>words</strong> in <code>s</code> will be separated by at least one space.</p>\n\n<p>Return <em>a string of the words in reverse order concatenated by a single space.</em></p>\n\n<p><b>Note</b> that <code>s</code> may contain leading or trailing spaces or multiple spaces between two words. The returned string should only have a single space separating the words. Do not include any extra spaces.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;the sky is blue&quot;\n<strong>Output:</strong> &quot;blue is sky the&quot;\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;  hello world  &quot;\n<strong>Output:</strong> &quot;world hello&quot;\n<strong>Explanation:</strong> Your reversed string should not contain leading or trailing spaces.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;a good   example&quot;\n<strong>Output:</strong> &quot;example good a&quot;\n<strong>Explanation:</strong> You need to reduce multiple spaces between two words to a single space in the reversed string.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>s</code> contains English letters (upper-case and lower-case), digits, and spaces <code>&#39; &#39;</code>.</li>\n\t<li>There is <strong>at least one</strong> word in <code>s</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><b data-stringify-type=\"bold\">Follow-up:&nbsp;</b>If the string data type is mutable in your language, can&nbsp;you solve it&nbsp;<b data-stringify-type=\"bold\">in-place</b>&nbsp;with&nbsp;<code data-stringify-type=\"code\">O(1)</code>&nbsp;extra space?</p>\n","SampleTestCase":"\"the sky is blue\"","ExampleTestcases":"\"the sky is blue\"\n\"  hello world  \"\n\"a good   example\"","Difficulty":"Medium","Title":"Reverse Words in a String","TitleSlug":"reverse-words-in-a-string","IsPaidOnly":false,"Stats":"{\"totalAccepted\": \"2.5M\", \"totalSubmission\": \"4.7M\", \"totalAcceptedRaw\": 2500072, \"totalSubmissionRaw\": 4729793, \"acRate\": \"52.9%\"}","Likes":9689,"Dislikes":5413,"FreqBar":0,"CategoryTitle":"Algorithms","TopicTags":[{"Id":"VG9waWNUYWdOb2RlOjk=","Name":"Two Pointers","Slug":"two-pointers"},{"Id":"VG9waWNUYWdOb2RlOjEw","Name":"String","Slug":"string"}],"CodeSnippets":[{"Lang":"C++","LangSlug":"cpp","Code":"class Solution {\npublic:\n    string reverseWords(string s) {\n        \n    }\n};"},{"Lang":"Java","LangSlug":"java","Code":"class Solution {\n    public String reverseWords(String s) {\n        \n    }\n}"},{"Lang":"Python","LangSlug":"python","Code":"class Solution(object):\n    def reverseWords(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: str\n        \"\"\"\n        "},{"Lang":"Python3","LangSlug":"python3","Code":"class Solution:\n    def reverseWords(self, s: str) -> str:\n        "},{"Lang":"C","LangSlug":"c","Code":"char* reverseWords(char* s) {\n    \n}"},{"Lang":"C#","LangSlug":"csharp","Code":"public class Solution {\n    public string ReverseWords(string s) {\n        \n    }\n}"},{"Lang":"JavaScript","LangSlug":"javascript","Code":"/**\n * @param {string} s\n * @return {string}\n */\nvar reverseWords = function(s) {\n    \n};"},{"Lang":"TypeScript","LangSlug":"typescript","Code":"function reverseWords(s: string): string {\n    \n};"},{"Lang":"PHP","LangSlug":"php","Code":"class Solution {\n\n    /**\n     * @param String $s\n     * @return String\n     */\n    function reverseWords($s) {\n        \n    }\n}"},{"Lang":"Swift","LangSlug":"swift","Code":"class Solution {\n    func reverseWords(_ s: String) -> String {\n        \n    }\n}"},{"Lang":"Kotlin","LangSlug":"kotlin","Code":"class Solution {\n    fun reverseWords(s: String): String {\n        \n    }\n}"},{"Lang":"Dart","LangSlug":"dart","Code":"class Solution {\n  String reverseWords(String s) {\n    \n  }\n}"},{"Lang":"Go","LangSlug":"golang","Code":"func reverseWords(s string) string {\n    \n}"},{"Lang":"Ruby","LangSlug":"ruby","Code":"# @param {String} s\n# @return {String}\ndef reverse_words(s)\n    \nend"},{"Lang":"Scala","LangSlug":"scala","Code":"object Solution {\n    def reverseWords(s: String): String = {\n        \n    }\n}"},{"Lang":"Rust","LangSlug":"rust","Code":"impl Solution {\n    pub fn reverse_words(s: String) -> String {\n        \n    }\n}"},{"Lang":"Racket","LangSlug":"racket","Code":"(define/contract (reverse-words s)\n  (-> string? string?)\n  )"},{"Lang":"Erlang","LangSlug":"erlang","Code":"-spec reverse_words(S :: unicode:unicode_binary()) -> unicode:unicode_binary().\nreverse_words(S) ->\n  ."},{"Lang":"Elixir","LangSlug":"elixir","Code":"defmodule Solution do\n  @spec reverse_words(s :: String.t) :: String.t\n  def reverse_words(s) do\n    \n  end\nend"}],"CompanyTagStats":""}},"DownloadedAt":"2025-08-07T09:17:17.377221226+02:00","AcRate":"52.9","TotalSubmissions":4729793,"TotalAccepted":2500072,"AcceptanceRate":0.5285795805440111,"ContentFeatures":"","CodeSnippetFeatures":{"c":"","cpp":"","csharp":"","dart":"","elixir":"","erlang":"","golang":"","java":"","javascript":"","kotlin":"","php":"","python":"","python3":"","racket":"","ruby":"","rust":"","scala":"","swift":"","typescript":""},"Url":"https://leetcode.com/problems/reverse-words-in-a-string/"},"Solutions":{"se-gpt-4o":{"Lang":"python3","Prompt":"Multi-agent approach:\n1. Analysis\n2. Design\n3. Implementation\n4. Verification","Answer":"=== ANALYSIS ===\n```python\nclass Solution:\n    def reverseWords(self, s: str) -> str:\n        # Step 1: Split the string into words by whitespace\n        words = s.split()\n        \n        # Step 2: Reverse the list of words\n        reversed_words = words[::-1]\n        \n        # Step 3: Join the reversed words with a single space\n        result = ' '.join(reversed_words)\n        \n        return result\n```\n\n=== DESIGN ===\n```python\nclass Solution:\n    def reverseWords(self, s: str) -> str:\n        # Step 1: Split the string into words by whitespace\n        words = s.split()\n        \n        # Step 2: Reverse the list of words\n        reversed_words = words[::-1]\n        \n        # Step 3: Join the reversed words with a single space\n        result = ' '.join(reversed_words)\n        \n        return result\n```\n\n=== IMPLEMENTATION ===\n```python\nclass Solution:\n    def reverseWords(self, s: str) -> str:\n        words = s.split()\n        reversed_words = words[::-1]\n        result = ' '.join(reversed_words)\n        return result\n```\n\n=== VERIFICATION ===\n```python\nclass Solution:\n    def reverseWords(self, s: str) -> str:\n        # Split the string into words by whitespace\n        words = s.split()\n        \n        # Reverse the list of words\n        reversed_words = words[::-1]\n        \n        # Join the reversed words with a single space\n        result = ' '.join(reversed_words)\n        \n        return result\n```\n\n","TypedCode":"\nclass Solution:\n    def reverseWords(self, s: str) -> str:\n        words = s.split()\n        reversed_words = words[::-1]\n        result = ' '.join(reversed_words)\n        return result\n","Model":"se-gpt-4o","Latency":5784487028,"SolvedAt":"2025-08-07T09:46:50.681797395+02:00","PromptTokens":3051,"OutputTokens":316}},"Submissions":{"se-gpt-4o":{"SubmitRequest":{"lang":"python3","question_id":"151","typed_code":"\nclass Solution:\n    def reverseWords(self, s: str) -> str:\n        words = s.split()\n        reversed_words = words[::-1]\n        result = ' '.join(reversed_words)\n        return result\n"},"SubmissionId":1726612133,"CheckResponse":{"status_code":10,"status_msg":"Accepted","Finished":true,"State":"SUCCESS"},"SubmittedAt":"2025-08-07T10:18:17.430427704+02:00"}}}
