{"Question":{"Data":{"Question":{"questionFrontendId":"334","questionId":"334","Content":"<p>Given an integer array <code>nums</code>, return <code>true</code><em> if there exists a triple of indices </em><code>(i, j, k)</code><em> such that </em><code>i &lt; j &lt; k</code><em> and </em><code>nums[i] &lt; nums[j] &lt; nums[k]</code>. If no such indices exists, return <code>false</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,4,5]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> Any triplet where i &lt; j &lt; k is valid.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [5,4,3,2,1]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> No triplet exists.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,1,5,0,4,6]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> One of the valid triplet is (3, 4, 5), because nums[3] == 0 &lt; nums[4] == 4 &lt; nums[5] == 6.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 5 * 10<sup>5</sup></code></li>\n\t<li><code>-2<sup>31</sup> &lt;= nums[i] &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow up:</strong> Could you implement a solution that runs in <code>O(n)</code> time complexity and <code>O(1)</code> space complexity?","SampleTestCase":"[1,2,3,4,5]","ExampleTestcases":"[1,2,3,4,5]\n[5,4,3,2,1]\n[2,1,5,0,4,6]","Difficulty":"Medium","Title":"Increasing Triplet Subsequence","TitleSlug":"increasing-triplet-subsequence","IsPaidOnly":false,"Stats":"{\"totalAccepted\": \"840.5K\", \"totalSubmission\": \"2.1M\", \"totalAcceptedRaw\": 840519, \"totalSubmissionRaw\": 2146658, \"acRate\": \"39.2%\"}","Likes":8653,"Dislikes":674,"FreqBar":0,"CategoryTitle":"Algorithms","TopicTags":[{"Id":"VG9waWNUYWdOb2RlOjU=","Name":"Array","Slug":"array"},{"Id":"VG9waWNUYWdOb2RlOjE3","Name":"Greedy","Slug":"greedy"}],"CodeSnippets":[{"Lang":"C++","LangSlug":"cpp","Code":"class Solution {\npublic:\n    bool increasingTriplet(vector<int>& nums) {\n        \n    }\n};"},{"Lang":"Java","LangSlug":"java","Code":"class Solution {\n    public boolean increasingTriplet(int[] nums) {\n        \n    }\n}"},{"Lang":"Python","LangSlug":"python","Code":"class Solution(object):\n    def increasingTriplet(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: bool\n        \"\"\"\n        "},{"Lang":"Python3","LangSlug":"python3","Code":"class Solution:\n    def increasingTriplet(self, nums: List[int]) -> bool:\n        "},{"Lang":"C","LangSlug":"c","Code":"bool increasingTriplet(int* nums, int numsSize) {\n    \n}"},{"Lang":"C#","LangSlug":"csharp","Code":"public class Solution {\n    public bool IncreasingTriplet(int[] nums) {\n        \n    }\n}"},{"Lang":"JavaScript","LangSlug":"javascript","Code":"/**\n * @param {number[]} nums\n * @return {boolean}\n */\nvar increasingTriplet = function(nums) {\n    \n};"},{"Lang":"TypeScript","LangSlug":"typescript","Code":"function increasingTriplet(nums: number[]): boolean {\n    \n};"},{"Lang":"PHP","LangSlug":"php","Code":"class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @return Boolean\n     */\n    function increasingTriplet($nums) {\n        \n    }\n}"},{"Lang":"Swift","LangSlug":"swift","Code":"class Solution {\n    func increasingTriplet(_ nums: [Int]) -> Bool {\n        \n    }\n}"},{"Lang":"Kotlin","LangSlug":"kotlin","Code":"class Solution {\n    fun increasingTriplet(nums: IntArray): Boolean {\n        \n    }\n}"},{"Lang":"Dart","LangSlug":"dart","Code":"class Solution {\n  bool increasingTriplet(List<int> nums) {\n    \n  }\n}"},{"Lang":"Go","LangSlug":"golang","Code":"func increasingTriplet(nums []int) bool {\n    \n}"},{"Lang":"Ruby","LangSlug":"ruby","Code":"# @param {Integer[]} nums\n# @return {Boolean}\ndef increasing_triplet(nums)\n    \nend"},{"Lang":"Scala","LangSlug":"scala","Code":"object Solution {\n    def increasingTriplet(nums: Array[Int]): Boolean = {\n        \n    }\n}"},{"Lang":"Rust","LangSlug":"rust","Code":"impl Solution {\n    pub fn increasing_triplet(nums: Vec<i32>) -> bool {\n        \n    }\n}"},{"Lang":"Racket","LangSlug":"racket","Code":"(define/contract (increasing-triplet nums)\n  (-> (listof exact-integer?) boolean?)\n  )"},{"Lang":"Erlang","LangSlug":"erlang","Code":"-spec increasing_triplet(Nums :: [integer()]) -> boolean().\nincreasing_triplet(Nums) ->\n  ."},{"Lang":"Elixir","LangSlug":"elixir","Code":"defmodule Solution do\n  @spec increasing_triplet(nums :: [integer]) :: boolean\n  def increasing_triplet(nums) do\n    \n  end\nend"}],"CompanyTagStats":""}},"DownloadedAt":"2025-09-07T15:51:45.627790537+02:00","AcRate":"39.2","TotalSubmissions":2146658,"TotalAccepted":840519,"AcceptanceRate":0.39154769879505724,"ContentFeatures":"","CodeSnippetFeatures":{"c":"","cpp":"","csharp":"","dart":"","elixir":"","erlang":"","golang":"","java":"","javascript":"","kotlin":"","php":"","python":"","python3":"","racket":"","ruby":"","rust":"","scala":"","swift":"","typescript":""},"Url":"https://leetcode.com/problems/increasing-triplet-subsequence/"},"Solutions":{"se-gpt-4o":{"Lang":"python3","Prompt":"Multi-agent approach:\n1. Analysis\n2. Design\n3. Implementation\n4. Verification","Answer":"=== ANALYSIS ===\n```python\nfrom typing import List\n\nclass Solution:\n    def increasingTriplet(self, nums: List[int]) -> bool:\n        first = second = float('inf')\n\n        for num in nums:\n            if num <= first:\n                first = num\n            elif num <= second:\n                second = num\n            else:\n                return True\n\n        return False\n```\n\n=== DESIGN ===\n```python\nclass Solution:\n    def increasingTriplet(self, nums: List[int]) -> bool:\n        # Initialize the first and second numbers of the triplet as infinite\n        first = second = float('inf')\n        \n        # Iterate through each number in the given list\n        for num in nums:\n            # Update the first number if the current number is smaller\n            if num <= first:\n                first = num\n            # If the current number is greater than the first but smaller than the second\n            # Update the second number\n            elif num <= second:\n                second = num\n            # If the current number is greater than both first and second\n            # This means a valid triplet is found\n            else:\n                return True\n        \n        # If no triplet is found, return False\n        return False\n```\n\n=== IMPLEMENTATION ===\n```python\nclass Solution:\n    def increasingTriplet(self, nums: List[int]) -> bool:\n        first = second = float('inf')\n        for num in nums:\n            if num <= first:\n                first = num\n            elif num <= second:\n                second = num\n            else:\n                return True\n        return False\n```\n\n=== VERIFICATION ===\n```python\nclass Solution:\n    def increasingTriplet(self, nums: List[int]) -> bool:\n        first = second = float('inf')\n        for num in nums:\n            if num <= first:\n                first = num\n            elif num <= second:\n                second = num\n            else:\n                return True\n        return False\n```\n\n","TypedCode":"\nclass Solution:\n    def increasingTriplet(self, nums: List[int]) -> bool:\n        first = second = float('inf')\n        for num in nums:\n            if num <= first:\n                first = num\n            elif num <= second:\n                second = num\n            else:\n                return True\n        return False\n","Model":"se-gpt-4o","Latency":4076705876,"SolvedAt":"2025-09-07T16:04:52.754909985+02:00","PromptTokens":3118,"OutputTokens":390}},"Submissions":{"se-gpt-4o":{"SubmitRequest":{"lang":"python3","question_id":"334","typed_code":"\nclass Solution:\n    def increasingTriplet(self, nums: List[int]) -> bool:\n        first = second = float('inf')\n        for num in nums:\n            if num <= first:\n                first = num\n            elif num <= second:\n                second = num\n            else:\n                return True\n        return False\n"},"SubmissionId":1762748228,"CheckResponse":{"status_code":10,"status_msg":"Accepted","Finished":true,"State":"SUCCESS"},"SubmittedAt":"2025-09-07T16:27:13.263986411+02:00"}}}
