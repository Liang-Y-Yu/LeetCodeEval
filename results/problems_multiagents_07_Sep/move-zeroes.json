{"Question":{"Data":{"Question":{"questionFrontendId":"283","questionId":"283","Content":"<p>Given an integer array <code>nums</code>, move all <code>0</code>&#39;s to the end of it while maintaining the relative order of the non-zero elements.</p>\n\n<p><strong>Note</strong> that you must do this in-place without making a copy of the array.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [0,1,0,3,12]\n<strong>Output:</strong> [1,3,12,0,0]\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [0]\n<strong>Output:</strong> [0]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>-2<sup>31</sup> &lt;= nums[i] &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow up:</strong> Could you minimize the total number of operations done?","SampleTestCase":"[0,1,0,3,12]","ExampleTestcases":"[0,1,0,3,12]\n[0]","Difficulty":"Easy","Title":"Move Zeroes","TitleSlug":"move-zeroes","IsPaidOnly":false,"Stats":"{\"totalAccepted\": \"4.4M\", \"totalSubmission\": \"7M\", \"totalAcceptedRaw\": 4383861, \"totalSubmissionRaw\": 6952912, \"acRate\": \"63.1%\"}","Likes":18411,"Dislikes":546,"FreqBar":0,"CategoryTitle":"Algorithms","TopicTags":[{"Id":"VG9waWNUYWdOb2RlOjU=","Name":"Array","Slug":"array"},{"Id":"VG9waWNUYWdOb2RlOjk=","Name":"Two Pointers","Slug":"two-pointers"}],"CodeSnippets":[{"Lang":"C++","LangSlug":"cpp","Code":"class Solution {\npublic:\n    void moveZeroes(vector<int>& nums) {\n        \n    }\n};"},{"Lang":"Java","LangSlug":"java","Code":"class Solution {\n    public void moveZeroes(int[] nums) {\n        \n    }\n}"},{"Lang":"Python","LangSlug":"python","Code":"class Solution(object):\n    def moveZeroes(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: None Do not return anything, modify nums in-place instead.\n        \"\"\"\n        "},{"Lang":"Python3","LangSlug":"python3","Code":"class Solution:\n    def moveZeroes(self, nums: List[int]) -> None:\n        \"\"\"\n        Do not return anything, modify nums in-place instead.\n        \"\"\"\n        "},{"Lang":"C","LangSlug":"c","Code":"void moveZeroes(int* nums, int numsSize) {\n    \n}"},{"Lang":"C#","LangSlug":"csharp","Code":"public class Solution {\n    public void MoveZeroes(int[] nums) {\n        \n    }\n}"},{"Lang":"JavaScript","LangSlug":"javascript","Code":"/**\n * @param {number[]} nums\n * @return {void} Do not return anything, modify nums in-place instead.\n */\nvar moveZeroes = function(nums) {\n    \n};"},{"Lang":"TypeScript","LangSlug":"typescript","Code":"/**\n Do not return anything, modify nums in-place instead.\n */\nfunction moveZeroes(nums: number[]): void {\n    \n};"},{"Lang":"PHP","LangSlug":"php","Code":"class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @return NULL\n     */\n    function moveZeroes(&$nums) {\n        \n    }\n}"},{"Lang":"Swift","LangSlug":"swift","Code":"class Solution {\n    func moveZeroes(_ nums: inout [Int]) {\n        \n    }\n}"},{"Lang":"Kotlin","LangSlug":"kotlin","Code":"class Solution {\n    fun moveZeroes(nums: IntArray): Unit {\n        \n    }\n}"},{"Lang":"Dart","LangSlug":"dart","Code":"class Solution {\n  void moveZeroes(List<int> nums) {\n    \n  }\n}"},{"Lang":"Go","LangSlug":"golang","Code":"func moveZeroes(nums []int)  {\n    \n}"},{"Lang":"Ruby","LangSlug":"ruby","Code":"# @param {Integer[]} nums\n# @return {Void} Do not return anything, modify nums in-place instead.\ndef move_zeroes(nums)\n    \nend"},{"Lang":"Scala","LangSlug":"scala","Code":"object Solution {\n    def moveZeroes(nums: Array[Int]): Unit = {\n        \n    }\n}"},{"Lang":"Rust","LangSlug":"rust","Code":"impl Solution {\n    pub fn move_zeroes(nums: &mut Vec<i32>) {\n        \n    }\n}"}],"CompanyTagStats":""}},"DownloadedAt":"2025-09-07T15:55:34.929531523+02:00","AcRate":"63.1","TotalSubmissions":6952912,"TotalAccepted":4383861,"AcceptanceRate":0.630507188930336,"ContentFeatures":"","CodeSnippetFeatures":{"c":"","cpp":"","csharp":"","dart":"","golang":"","java":"","javascript":"","kotlin":"","php":"","python":"","python3":"","ruby":"","rust":"","scala":"","swift":"","typescript":""},"Url":"https://leetcode.com/problems/move-zeroes/"},"Solutions":{"se-gpt-4o":{"Lang":"python3","Prompt":"Multi-agent approach:\n1. Analysis\n2. Design\n3. Implementation\n4. Verification","Answer":"=== ANALYSIS ===\n```python\nclass Solution:\n    def moveZeroes(self, nums: List[int]) -> None:\n        zero_pos = 0  # position to place the next non-zero element\n        \n        for i in range(len(nums)):\n            if nums[i] != 0:\n                nums[zero_pos], nums[i] = nums[i], nums[zero_pos]\n                zero_pos += 1\n```\n\n=== DESIGN ===\n```python\nclass Solution:\n    def moveZeroes(self, nums: List[int]) -> None:\n        zero_pos = 0  # position to place the next non-zero element\n        \n        for i in range(len(nums)):\n            if nums[i] != 0:\n                nums[zero_pos], nums[i] = nums[i], nums[zero_pos]\n                zero_pos += 1\n```\n\n=== IMPLEMENTATION ===\n```python\nfrom typing import List\n\nclass Solution:\n    def moveZeroes(self, nums: List[int]) -> None:\n        zero_pos = 0\n        \n        for i in range(len(nums)):\n            if nums[i] != 0:\n                nums[zero_pos], nums[i] = nums[i], nums[zero_pos]\n                zero_pos += 1\n```\n\n=== VERIFICATION ===\n```python\nfrom typing import List\n\nclass Solution:\n    def moveZeroes(self, nums: List[int]) -> None:\n        zero_pos = 0\n        \n        for i in range(len(nums)):\n            if nums[i] != 0:\n                nums[zero_pos], nums[i] = nums[i], nums[zero_pos]\n                zero_pos += 1\n```\n\n","TypedCode":"\nfrom typing import List\n\nclass Solution:\n    def moveZeroes(self, nums: List[int]) -> None:\n        zero_pos = 0\n        \n        for i in range(len(nums)):\n            if nums[i] != 0:\n                nums[zero_pos], nums[i] = nums[i], nums[zero_pos]\n                zero_pos += 1\n","Model":"se-gpt-4o","Latency":3454053135,"SolvedAt":"2025-09-07T16:09:54.461876782+02:00","PromptTokens":2610,"OutputTokens":318}},"Submissions":{"se-gpt-4o":{"SubmitRequest":{"lang":"python3","question_id":"283","typed_code":"\nfrom typing import List\n\nclass Solution:\n    def moveZeroes(self, nums: List[int]) -> None:\n        zero_pos = 0\n        \n        for i in range(len(nums)):\n            if nums[i] != 0:\n                nums[zero_pos], nums[i] = nums[i], nums[zero_pos]\n                zero_pos += 1\n"},"SubmissionId":1762758168,"CheckResponse":{"status_code":10,"status_msg":"Accepted","Finished":true,"State":"SUCCESS"},"SubmittedAt":"2025-09-07T16:37:31.827677411+02:00"}}}
