{"Question":{"Data":{"Question":{"questionFrontendId":"1732","questionId":"1833","Content":"<p>There is a biker going on a road trip. The road trip consists of <code>n + 1</code> points at different altitudes. The biker starts his trip on point <code>0</code> with altitude equal <code>0</code>.</p>\n\n<p>You are given an integer array <code>gain</code> of length <code>n</code> where <code>gain[i]</code> is the <strong>net gain in altitude</strong> between points <code>i</code>​​​​​​ and <code>i + 1</code> for all (<code>0 &lt;= i &lt; n)</code>. Return <em>the <strong>highest altitude</strong> of a point.</em></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> gain = [-5,1,5,0,-7]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> The altitudes are [0,-5,-4,1,1,-6]. The highest is 1.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> gain = [-4,-3,-2,-1,4,3,2]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> The altitudes are [0,-4,-7,-9,-10,-6,-3,-1]. The highest is 0.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == gain.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 100</code></li>\n\t<li><code>-100 &lt;= gain[i] &lt;= 100</code></li>\n</ul>\n","SampleTestCase":"[-5,1,5,0,-7]","ExampleTestcases":"[-5,1,5,0,-7]\n[-4,-3,-2,-1,4,3,2]","Difficulty":"Easy","Title":"Find the Highest Altitude","TitleSlug":"find-the-highest-altitude","IsPaidOnly":false,"Stats":"{\"totalAccepted\": \"630.8K\", \"totalSubmission\": \"752.4K\", \"totalAcceptedRaw\": 630781, \"totalSubmissionRaw\": 752374, \"acRate\": \"83.8%\"}","Likes":3136,"Dislikes":403,"FreqBar":0,"CategoryTitle":"Algorithms","TopicTags":[{"Id":"VG9waWNUYWdOb2RlOjU=","Name":"Array","Slug":"array"},{"Id":"VG9waWNUYWdOb2RlOjYxMDY4","Name":"Prefix Sum","Slug":"prefix-sum"}],"CodeSnippets":[{"Lang":"C++","LangSlug":"cpp","Code":"class Solution {\npublic:\n    int largestAltitude(vector<int>& gain) {\n        \n    }\n};"},{"Lang":"Java","LangSlug":"java","Code":"class Solution {\n    public int largestAltitude(int[] gain) {\n        \n    }\n}"},{"Lang":"Python","LangSlug":"python","Code":"class Solution(object):\n    def largestAltitude(self, gain):\n        \"\"\"\n        :type gain: List[int]\n        :rtype: int\n        \"\"\"\n        "},{"Lang":"Python3","LangSlug":"python3","Code":"class Solution:\n    def largestAltitude(self, gain: List[int]) -> int:\n        "},{"Lang":"C","LangSlug":"c","Code":"int largestAltitude(int* gain, int gainSize) {\n    \n}"},{"Lang":"C#","LangSlug":"csharp","Code":"public class Solution {\n    public int LargestAltitude(int[] gain) {\n        \n    }\n}"},{"Lang":"JavaScript","LangSlug":"javascript","Code":"/**\n * @param {number[]} gain\n * @return {number}\n */\nvar largestAltitude = function(gain) {\n    \n};"},{"Lang":"TypeScript","LangSlug":"typescript","Code":"function largestAltitude(gain: number[]): number {\n    \n};"},{"Lang":"PHP","LangSlug":"php","Code":"class Solution {\n\n    /**\n     * @param Integer[] $gain\n     * @return Integer\n     */\n    function largestAltitude($gain) {\n        \n    }\n}"},{"Lang":"Swift","LangSlug":"swift","Code":"class Solution {\n    func largestAltitude(_ gain: [Int]) -> Int {\n        \n    }\n}"},{"Lang":"Kotlin","LangSlug":"kotlin","Code":"class Solution {\n    fun largestAltitude(gain: IntArray): Int {\n        \n    }\n}"},{"Lang":"Dart","LangSlug":"dart","Code":"class Solution {\n  int largestAltitude(List<int> gain) {\n    \n  }\n}"},{"Lang":"Go","LangSlug":"golang","Code":"func largestAltitude(gain []int) int {\n    \n}"},{"Lang":"Ruby","LangSlug":"ruby","Code":"# @param {Integer[]} gain\n# @return {Integer}\ndef largest_altitude(gain)\n    \nend"},{"Lang":"Scala","LangSlug":"scala","Code":"object Solution {\n    def largestAltitude(gain: Array[Int]): Int = {\n        \n    }\n}"},{"Lang":"Rust","LangSlug":"rust","Code":"impl Solution {\n    pub fn largest_altitude(gain: Vec<i32>) -> i32 {\n        \n    }\n}"},{"Lang":"Racket","LangSlug":"racket","Code":"(define/contract (largest-altitude gain)\n  (-> (listof exact-integer?) exact-integer?)\n  )"},{"Lang":"Erlang","LangSlug":"erlang","Code":"-spec largest_altitude(Gain :: [integer()]) -> integer().\nlargest_altitude(Gain) ->\n  ."},{"Lang":"Elixir","LangSlug":"elixir","Code":"defmodule Solution do\n  @spec largest_altitude(gain :: [integer]) :: integer\n  def largest_altitude(gain) do\n    \n  end\nend"}],"CompanyTagStats":""}},"DownloadedAt":"2025-09-06T22:43:48.947434244+02:00","AcRate":"83.8","TotalSubmissions":752374,"TotalAccepted":630781,"AcceptanceRate":0.8383875572521113,"ContentFeatures":"","CodeSnippetFeatures":{"c":"","cpp":"","csharp":"","dart":"","elixir":"","erlang":"","golang":"","java":"","javascript":"","kotlin":"","php":"","python":"","python3":"","racket":"","ruby":"","rust":"","scala":"","swift":"","typescript":""},"Url":"https://leetcode.com/problems/find-the-highest-altitude/"},"Solutions":{"se-gpt-4o":{"Lang":"python3","Prompt":"Multi-agent approach:\n1. Analysis\n2. Design\n3. Implementation\n4. Verification","Answer":"=== ANALYSIS ===\n```python\nclass Solution:\n    def largestAltitude(self, gain: List[int]) -> int:\n        current_altitude = 0\n        highest_altitude = 0\n        \n        for g in gain:\n            current_altitude += g\n            if current_altitude > highest_altitude:\n                highest_altitude = current_altitude\n        \n        return highest_altitude\n```\n\n=== DESIGN ===\n```python\nclass Solution:\n    def largestAltitude(self, gain: List[int]) -> int:\n        # Initialize current altitude and highest altitude to 0, as biker starts from altitude 0\n        current_altitude = 0\n        highest_altitude = 0\n        \n        # Iterate through the gain list which represents the change in altitude between points\n        for g in gain:\n            # Update the current altitude by adding the gain for the segment\n            current_altitude += g\n            # Check if the current altitude is greater than the highest altitude\n            if current_altitude > highest_altitude:\n                # Update the highest altitude if the current altitude is greater\n                highest_altitude = current_altitude\n        \n        # Return the highest altitude reached during the trip\n        return highest_altitude\n```\n\n=== IMPLEMENTATION ===\n```python\nfrom typing import List\n\nclass Solution:\n    def largestAltitude(self, gain: List[int]) -> int:\n        current_altitude = 0\n        highest_altitude = 0\n        \n        for g in gain:\n            current_altitude += g\n            if current_altitude > highest_altitude:\n                highest_altitude = current_altitude\n        \n        return highest_altitude\n```\n\n=== VERIFICATION ===\n```python\nfrom typing import List\n\nclass Solution:\n    def largestAltitude(self, gain: List[int]) -> int:\n        current_altitude = 0\n        highest_altitude = 0\n        \n        for g in gain:\n            current_altitude += g\n            if current_altitude > highest_altitude:\n                highest_altitude = current_altitude\n        \n        return highest_altitude\n```\n\n","TypedCode":"\nfrom typing import List\n\nclass Solution:\n    def largestAltitude(self, gain: List[int]) -> int:\n        current_altitude = 0\n        highest_altitude = 0\n        \n        for g in gain:\n            current_altitude += g\n            if current_altitude > highest_altitude:\n                highest_altitude = current_altitude\n        \n        return highest_altitude\n","Model":"se-gpt-4o","Latency":4581035394,"SolvedAt":"2025-09-06T22:56:17.235547832+02:00","PromptTokens":3003,"OutputTokens":402}},"Submissions":{"se-gpt-4o":{"SubmitRequest":{"lang":"python3","question_id":"1833","typed_code":"\nfrom typing import List\n\nclass Solution:\n    def largestAltitude(self, gain: List[int]) -> int:\n        current_altitude = 0\n        highest_altitude = 0\n        \n        for g in gain:\n            current_altitude += g\n            if current_altitude > highest_altitude:\n                highest_altitude = current_altitude\n        \n        return highest_altitude\n"},"SubmissionId":1761930489,"CheckResponse":{"status_code":10,"status_msg":"Accepted","Finished":true,"State":"SUCCESS"},"SubmittedAt":"2025-09-06T23:23:17.728992184+02:00"}}}
