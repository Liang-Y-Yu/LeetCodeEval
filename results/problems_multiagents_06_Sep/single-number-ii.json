{"Question":{"Data":{"Question":{"questionFrontendId":"137","questionId":"137","Content":"<p>Given an integer array <code>nums</code> where&nbsp;every element appears <strong>three times</strong> except for one, which appears <strong>exactly once</strong>. <em>Find the single element and return it</em>.</p>\n\n<p>You must&nbsp;implement a solution with a linear runtime complexity and use&nbsp;only constant&nbsp;extra space.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [2,2,3,2]\n<strong>Output:</strong> 3\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [0,1,0,1,0,1,99]\n<strong>Output:</strong> 99\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 3 * 10<sup>4</sup></code></li>\n\t<li><code>-2<sup>31</sup> &lt;= nums[i] &lt;= 2<sup>31</sup> - 1</code></li>\n\t<li>Each element in <code>nums</code> appears exactly <strong>three times</strong> except for one element which appears <strong>once</strong>.</li>\n</ul>\n","SampleTestCase":"[2,2,3,2]","ExampleTestcases":"[2,2,3,2]\n[0,1,0,1,0,1,99]","Difficulty":"Medium","Title":"Single Number II","TitleSlug":"single-number-ii","IsPaidOnly":false,"Stats":"{\"totalAccepted\": \"786.9K\", \"totalSubmission\": \"1.2M\", \"totalAcceptedRaw\": 786942, \"totalSubmissionRaw\": 1195420, \"acRate\": \"65.8%\"}","Likes":8438,"Dislikes":733,"FreqBar":0,"CategoryTitle":"Algorithms","TopicTags":[{"Id":"VG9waWNUYWdOb2RlOjU=","Name":"Array","Slug":"array"},{"Id":"VG9waWNUYWdOb2RlOjE5","Name":"Bit Manipulation","Slug":"bit-manipulation"}],"CodeSnippets":[{"Lang":"C++","LangSlug":"cpp","Code":"class Solution {\npublic:\n    int singleNumber(vector<int>& nums) {\n        \n    }\n};"},{"Lang":"Java","LangSlug":"java","Code":"class Solution {\n    public int singleNumber(int[] nums) {\n        \n    }\n}"},{"Lang":"Python","LangSlug":"python","Code":"class Solution(object):\n    def singleNumber(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"\n        "},{"Lang":"Python3","LangSlug":"python3","Code":"class Solution:\n    def singleNumber(self, nums: List[int]) -> int:\n        "},{"Lang":"C","LangSlug":"c","Code":"int singleNumber(int* nums, int numsSize) {\n    \n}"},{"Lang":"C#","LangSlug":"csharp","Code":"public class Solution {\n    public int SingleNumber(int[] nums) {\n        \n    }\n}"},{"Lang":"JavaScript","LangSlug":"javascript","Code":"/**\n * @param {number[]} nums\n * @return {number}\n */\nvar singleNumber = function(nums) {\n    \n};"},{"Lang":"TypeScript","LangSlug":"typescript","Code":"function singleNumber(nums: number[]): number {\n    \n};"},{"Lang":"PHP","LangSlug":"php","Code":"class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @return Integer\n     */\n    function singleNumber($nums) {\n        \n    }\n}"},{"Lang":"Swift","LangSlug":"swift","Code":"class Solution {\n    func singleNumber(_ nums: [Int]) -> Int {\n        \n    }\n}"},{"Lang":"Kotlin","LangSlug":"kotlin","Code":"class Solution {\n    fun singleNumber(nums: IntArray): Int {\n        \n    }\n}"},{"Lang":"Dart","LangSlug":"dart","Code":"class Solution {\n  int singleNumber(List<int> nums) {\n    \n  }\n}"},{"Lang":"Go","LangSlug":"golang","Code":"func singleNumber(nums []int) int {\n    \n}"},{"Lang":"Ruby","LangSlug":"ruby","Code":"# @param {Integer[]} nums\n# @return {Integer}\ndef single_number(nums)\n    \nend"},{"Lang":"Scala","LangSlug":"scala","Code":"object Solution {\n    def singleNumber(nums: Array[Int]): Int = {\n        \n    }\n}"},{"Lang":"Rust","LangSlug":"rust","Code":"impl Solution {\n    pub fn single_number(nums: Vec<i32>) -> i32 {\n        \n    }\n}"},{"Lang":"Racket","LangSlug":"racket","Code":"(define/contract (single-number nums)\n  (-> (listof exact-integer?) exact-integer?)\n  )"},{"Lang":"Erlang","LangSlug":"erlang","Code":"-spec single_number(Nums :: [integer()]) -> integer().\nsingle_number(Nums) ->\n  ."},{"Lang":"Elixir","LangSlug":"elixir","Code":"defmodule Solution do\n  @spec single_number(nums :: [integer]) :: integer\n  def single_number(nums) do\n    \n  end\nend"}],"CompanyTagStats":""}},"DownloadedAt":"2025-09-06T22:50:04.90931658+02:00","AcRate":"65.8","TotalSubmissions":1195420,"TotalAccepted":786942,"AcceptanceRate":0.6582975021331415,"ContentFeatures":"","CodeSnippetFeatures":{"c":"","cpp":"","csharp":"","dart":"","elixir":"","erlang":"","golang":"","java":"","javascript":"","kotlin":"","php":"","python":"","python3":"","racket":"","ruby":"","rust":"","scala":"","swift":"","typescript":""},"Url":"https://leetcode.com/problems/single-number-ii/"},"Solutions":{"se-gpt-4o":{"Lang":"python3","Prompt":"Multi-agent approach:\n1. Analysis\n2. Design\n3. Implementation\n4. Verification","Answer":"=== ANALYSIS ===\n```python\nclass Solution:\n    def singleNumber(self, nums: List[int]) -> int:\n        seen_once = 0\n        seen_twice = 0\n        \n        for num in nums:\n            # Update seen_once and seen_twice\n            seen_once = ~seen_twice & (seen_once ^ num)\n            seen_twice = ~seen_once & (seen_twice ^ num)\n        \n        return seen_once\n```\n\n=== DESIGN ===\n```python\nclass Solution:\n    def singleNumber(self, nums: List[int]) -> int:\n        seen_once = 0\n        seen_twice = 0\n        \n        for num in nums:\n            # Update seen_once to hold the numbers that have appeared once\n            seen_once = ~seen_twice & (seen_once ^ num)\n            # Update seen_twice to hold the numbers that have appeared twice\n            seen_twice = ~seen_once & (seen_twice ^ num)\n        \n        # After processing all numbers, seen_once will contain the number that appeared once\n        return seen_once\n```\n\n=== IMPLEMENTATION ===\n```python\nclass Solution:\n    def singleNumber(self, nums: List[int]) -> int:\n        seen_once = 0\n        seen_twice = 0\n        \n        for num in nums:\n            seen_once = ~seen_twice & (seen_once ^ num)\n            seen_twice = ~seen_once & (seen_twice ^ num)\n        \n        return seen_once\n```\n\n=== VERIFICATION ===\n```python\nclass Solution:\n    def singleNumber(self, nums: List[int]) -> int:\n        seen_once = 0\n        seen_twice = 0\n        \n        for num in nums:\n            seen_once = ~seen_twice & (seen_once ^ num)\n            seen_twice = ~seen_once & (seen_twice ^ num)\n        \n        return seen_once\n```\n\n","TypedCode":"\nclass Solution:\n    def singleNumber(self, nums: List[int]) -> int:\n        seen_once = 0\n        seen_twice = 0\n        \n        for num in nums:\n            seen_once = ~seen_twice & (seen_once ^ num)\n            seen_twice = ~seen_once & (seen_twice ^ num)\n        \n        return seen_once\n","Model":"se-gpt-4o","Latency":5118516266,"SolvedAt":"2025-09-06T23:06:08.644356995+02:00","PromptTokens":2692,"OutputTokens":376}},"Submissions":{"se-gpt-4o":{"SubmitRequest":{"lang":"python3","question_id":"137","typed_code":"\nclass Solution:\n    def singleNumber(self, nums: List[int]) -> int:\n        seen_once = 0\n        seen_twice = 0\n        \n        for num in nums:\n            seen_once = ~seen_twice & (seen_once ^ num)\n            seen_twice = ~seen_once & (seen_twice ^ num)\n        \n        return seen_once\n"},"SubmissionId":1761940000,"CheckResponse":{"status_code":10,"status_msg":"Accepted","Finished":true,"State":"SUCCESS"},"SubmittedAt":"2025-09-06T23:41:43.526255973+02:00"}}}
