{"Question":{"Data":{"Question":{"questionFrontendId":"242","questionId":"242","Content":"<p>Given two strings <code>s</code> and <code>t</code>, return <code>true</code> if <code>t</code> is an <span data-keyword=\"anagram\">anagram</span> of <code>s</code>, and <code>false</code> otherwise.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">s = &quot;anagram&quot;, t = &quot;nagaram&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">true</span></p>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">s = &quot;rat&quot;, t = &quot;car&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">false</span></p>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length, t.length &lt;= 5 * 10<sup>4</sup></code></li>\n\t<li><code>s</code> and <code>t</code> consist of lowercase English letters.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong> What if the inputs contain Unicode characters? How would you adapt your solution to such a case?</p>\n","SampleTestCase":"\"anagram\"\n\"nagaram\"","ExampleTestcases":"\"anagram\"\n\"nagaram\"\n\"rat\"\n\"car\"","Difficulty":"Easy","Title":"Valid Anagram","TitleSlug":"valid-anagram","IsPaidOnly":false,"Stats":"{\"totalAccepted\": \"5.2M\", \"totalSubmission\": \"7.8M\", \"totalAcceptedRaw\": 5204868, \"totalSubmissionRaw\": 7756874, \"acRate\": \"67.1%\"}","Likes":13476,"Dislikes":452,"FreqBar":0,"CategoryTitle":"Algorithms","TopicTags":[{"Id":"VG9waWNUYWdOb2RlOjY=","Name":"Hash Table","Slug":"hash-table"},{"Id":"VG9waWNUYWdOb2RlOjEw","Name":"String","Slug":"string"},{"Id":"VG9waWNUYWdOb2RlOjYxMDQ5","Name":"Sorting","Slug":"sorting"}],"CodeSnippets":[{"Lang":"C++","LangSlug":"cpp","Code":"class Solution {\npublic:\n    bool isAnagram(string s, string t) {\n        \n    }\n};"},{"Lang":"Java","LangSlug":"java","Code":"class Solution {\n    public boolean isAnagram(String s, String t) {\n        \n    }\n}"},{"Lang":"Python","LangSlug":"python","Code":"class Solution(object):\n    def isAnagram(self, s, t):\n        \"\"\"\n        :type s: str\n        :type t: str\n        :rtype: bool\n        \"\"\"\n        "},{"Lang":"Python3","LangSlug":"python3","Code":"class Solution:\n    def isAnagram(self, s: str, t: str) -> bool:\n        "},{"Lang":"C","LangSlug":"c","Code":"bool isAnagram(char* s, char* t) {\n    \n}"},{"Lang":"C#","LangSlug":"csharp","Code":"public class Solution {\n    public bool IsAnagram(string s, string t) {\n        \n    }\n}"},{"Lang":"JavaScript","LangSlug":"javascript","Code":"/**\n * @param {string} s\n * @param {string} t\n * @return {boolean}\n */\nvar isAnagram = function(s, t) {\n    \n};"},{"Lang":"TypeScript","LangSlug":"typescript","Code":"function isAnagram(s: string, t: string): boolean {\n    \n};"},{"Lang":"PHP","LangSlug":"php","Code":"class Solution {\n\n    /**\n     * @param String $s\n     * @param String $t\n     * @return Boolean\n     */\n    function isAnagram($s, $t) {\n        \n    }\n}"},{"Lang":"Swift","LangSlug":"swift","Code":"class Solution {\n    func isAnagram(_ s: String, _ t: String) -> Bool {\n        \n    }\n}"},{"Lang":"Kotlin","LangSlug":"kotlin","Code":"class Solution {\n    fun isAnagram(s: String, t: String): Boolean {\n        \n    }\n}"},{"Lang":"Dart","LangSlug":"dart","Code":"class Solution {\n  bool isAnagram(String s, String t) {\n    \n  }\n}"},{"Lang":"Go","LangSlug":"golang","Code":"func isAnagram(s string, t string) bool {\n    \n}"},{"Lang":"Ruby","LangSlug":"ruby","Code":"# @param {String} s\n# @param {String} t\n# @return {Boolean}\ndef is_anagram(s, t)\n    \nend"},{"Lang":"Scala","LangSlug":"scala","Code":"object Solution {\n    def isAnagram(s: String, t: String): Boolean = {\n        \n    }\n}"},{"Lang":"Rust","LangSlug":"rust","Code":"impl Solution {\n    pub fn is_anagram(s: String, t: String) -> bool {\n        \n    }\n}"},{"Lang":"Racket","LangSlug":"racket","Code":"(define/contract (is-anagram s t)\n  (-> string? string? boolean?)\n  )"},{"Lang":"Erlang","LangSlug":"erlang","Code":"-spec is_anagram(S :: unicode:unicode_binary(), T :: unicode:unicode_binary()) -> boolean().\nis_anagram(S, T) ->\n  ."},{"Lang":"Elixir","LangSlug":"elixir","Code":"defmodule Solution do\n  @spec is_anagram(s :: String.t, t :: String.t) :: boolean\n  def is_anagram(s, t) do\n    \n  end\nend"}],"CompanyTagStats":""}},"DownloadedAt":"2025-09-06T11:00:01.03090806+02:00","AcRate":"67.1","TotalSubmissions":7756874,"TotalAccepted":5204868,"AcceptanceRate":0.6710007149787401,"ContentFeatures":"","CodeSnippetFeatures":{"c":"","cpp":"","csharp":"","dart":"","elixir":"","erlang":"","golang":"","java":"","javascript":"","kotlin":"","php":"","python":"","python3":"","racket":"","ruby":"","rust":"","scala":"","swift":"","typescript":""},"Url":"https://leetcode.com/problems/valid-anagram/"},"Solutions":{"se-gpt-4o":{"Lang":"python3","Prompt":"Hi, this is a coding interview. You will be given:\n* A problem statement (with sample test cases if available).\n* A starter code snippet (with fixed function signatures).\n\nPlease write your solution in the python3 programming language. Your code must:\n* Solve the problem fully and correctly.\n* Pass all provided sample test cases.\n* Run within acceptable time and memory limits (assume large inputs if none are specified).\n* Follow good coding practices (clear logic, readable structure, appropriate use of language features).\n\nHere is the problem statement: Given two strings s and t, return true if t is an anagram of s, and false otherwise.\n \nExample 1:\nInput: s = \"anagram\", t = \"nagaram\"\nOutput: true\nExample 2:\nInput: s = \"rat\", t = \"car\"\nOutput: false\n \nConstraints:\n\t1 <= s.length, t.length <= 5 * 10^4\n\ts and t consist of lowercase English letters.\n \nFollow up: What if the inputs contain Unicode characters? How would you adapt your solution to such a case?\n\nHere is the code snippet, which you should expand with your solution: class Solution:\n    def isAnagram(self, s: str, t: str) -> bool:\n        \n\nImportant Requirements:\n* Do not change any provided function signatures, class names, or method names.\n* Output only valid source code that can be executed as-is, without any further improvements or bugfixes.\n* Do not include docstrings, markdown, or commentary in your final code.\n\nGood luck!\n","Answer":"```python\nclass Solution:\n    def isAnagram(self, s: str, t: str) -> bool:\n        if len(s) != len(t):\n            return False\n        \n        count_s = {}\n        count_t = {}\n        \n        for char in s:\n            if char in count_s:\n                count_s[char] += 1\n            else:\n                count_s[char] = 1\n        \n        for char in t:\n            if char in count_t:\n                count_t[char] += 1\n            else:\n                count_t[char] = 1\n        \n        return count_s == count_t\n```","TypedCode":"\nclass Solution:\n    def isAnagram(self, s: str, t: str) -> bool:\n        if len(s) != len(t):\n            return False\n        \n        count_s = {}\n        count_t = {}\n        \n        for char in s:\n            if char in count_s:\n                count_s[char] += 1\n            else:\n                count_s[char] = 1\n        \n        for char in t:\n            if char in count_t:\n                count_t[char] += 1\n            else:\n                count_t[char] = 1\n        \n        return count_s == count_t\n","Model":"gpt-4o-2024-08-06","Latency":1482636330,"SolvedAt":"2025-09-06T21:50:55.13705612+02:00","PromptTokens":332,"OutputTokens":130}},"Submissions":{"se-gpt-4o":{"SubmitRequest":{"lang":"python3","question_id":"242","typed_code":"\nclass Solution:\n    def isAnagram(self, s: str, t: str) -> bool:\n        if len(s) != len(t):\n            return False\n        \n        count_s = {}\n        count_t = {}\n        \n        for char in s:\n            if char in count_s:\n                count_s[char] += 1\n            else:\n                count_s[char] = 1\n        \n        for char in t:\n            if char in count_t:\n                count_t[char] += 1\n            else:\n                count_t[char] = 1\n        \n        return count_s == count_t\n"},"SubmissionId":1761895779,"CheckResponse":{"status_code":10,"status_msg":"Accepted","Finished":true,"State":"SUCCESS"},"SubmittedAt":"2025-09-06T22:23:25.640125392+02:00"}}}
