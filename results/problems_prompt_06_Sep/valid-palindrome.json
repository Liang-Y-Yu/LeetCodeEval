{"Question":{"Data":{"Question":{"questionFrontendId":"125","questionId":"125","Content":"<p>A phrase is a <strong>palindrome</strong> if, after converting all uppercase letters into lowercase letters and removing all non-alphanumeric characters, it reads the same forward and backward. Alphanumeric characters include letters and numbers.</p>\n\n<p>Given a string <code>s</code>, return <code>true</code><em> if it is a <strong>palindrome</strong>, or </em><code>false</code><em> otherwise</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;A man, a plan, a canal: Panama&quot;\n<strong>Output:</strong> true\n<strong>Explanation:</strong> &quot;amanaplanacanalpanama&quot; is a palindrome.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;race a car&quot;\n<strong>Output:</strong> false\n<strong>Explanation:</strong> &quot;raceacar&quot; is not a palindrome.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot; &quot;\n<strong>Output:</strong> true\n<strong>Explanation:</strong> s is an empty string &quot;&quot; after removing non-alphanumeric characters.\nSince an empty string reads the same forward and backward, it is a palindrome.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 2 * 10<sup>5</sup></code></li>\n\t<li><code>s</code> consists only of printable ASCII characters.</li>\n</ul>\n","SampleTestCase":"\"A man, a plan, a canal: Panama\"","ExampleTestcases":"\"A man, a plan, a canal: Panama\"\n\"race a car\"\n\" \"","Difficulty":"Easy","Title":"Valid Palindrome","TitleSlug":"valid-palindrome","IsPaidOnly":false,"Stats":"{\"totalAccepted\": \"4.6M\", \"totalSubmission\": \"8.9M\", \"totalAcceptedRaw\": 4607644, \"totalSubmissionRaw\": 8919800, \"acRate\": \"51.7%\"}","Likes":10787,"Dislikes":8581,"FreqBar":0,"CategoryTitle":"Algorithms","TopicTags":[{"Id":"VG9waWNUYWdOb2RlOjk=","Name":"Two Pointers","Slug":"two-pointers"},{"Id":"VG9waWNUYWdOb2RlOjEw","Name":"String","Slug":"string"}],"CodeSnippets":[{"Lang":"C++","LangSlug":"cpp","Code":"class Solution {\npublic:\n    bool isPalindrome(string s) {\n        \n    }\n};"},{"Lang":"Java","LangSlug":"java","Code":"class Solution {\n    public boolean isPalindrome(String s) {\n        \n    }\n}"},{"Lang":"Python","LangSlug":"python","Code":"class Solution(object):\n    def isPalindrome(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: bool\n        \"\"\"\n        "},{"Lang":"Python3","LangSlug":"python3","Code":"class Solution:\n    def isPalindrome(self, s: str) -> bool:\n        "},{"Lang":"C","LangSlug":"c","Code":"bool isPalindrome(char* s) {\n    \n}"},{"Lang":"C#","LangSlug":"csharp","Code":"public class Solution {\n    public bool IsPalindrome(string s) {\n        \n    }\n}"},{"Lang":"JavaScript","LangSlug":"javascript","Code":"/**\n * @param {string} s\n * @return {boolean}\n */\nvar isPalindrome = function(s) {\n    \n};"},{"Lang":"TypeScript","LangSlug":"typescript","Code":"function isPalindrome(s: string): boolean {\n    \n};"},{"Lang":"PHP","LangSlug":"php","Code":"class Solution {\n\n    /**\n     * @param String $s\n     * @return Boolean\n     */\n    function isPalindrome($s) {\n        \n    }\n}"},{"Lang":"Swift","LangSlug":"swift","Code":"class Solution {\n    func isPalindrome(_ s: String) -> Bool {\n        \n    }\n}"},{"Lang":"Kotlin","LangSlug":"kotlin","Code":"class Solution {\n    fun isPalindrome(s: String): Boolean {\n        \n    }\n}"},{"Lang":"Dart","LangSlug":"dart","Code":"class Solution {\n  bool isPalindrome(String s) {\n    \n  }\n}"},{"Lang":"Go","LangSlug":"golang","Code":"func isPalindrome(s string) bool {\n    \n}"},{"Lang":"Ruby","LangSlug":"ruby","Code":"# @param {String} s\n# @return {Boolean}\ndef is_palindrome(s)\n    \nend"},{"Lang":"Scala","LangSlug":"scala","Code":"object Solution {\n    def isPalindrome(s: String): Boolean = {\n        \n    }\n}"},{"Lang":"Rust","LangSlug":"rust","Code":"impl Solution {\n    pub fn is_palindrome(s: String) -> bool {\n        \n    }\n}"},{"Lang":"Racket","LangSlug":"racket","Code":"(define/contract (is-palindrome s)\n  (-> string? boolean?)\n  )"},{"Lang":"Erlang","LangSlug":"erlang","Code":"-spec is_palindrome(S :: unicode:unicode_binary()) -> boolean().\nis_palindrome(S) ->\n  ."},{"Lang":"Elixir","LangSlug":"elixir","Code":"defmodule Solution do\n  @spec is_palindrome(s :: String.t) :: boolean\n  def is_palindrome(s) do\n    \n  end\nend"}],"CompanyTagStats":""}},"DownloadedAt":"2025-09-06T11:00:11.607657261+02:00","AcRate":"51.7","TotalSubmissions":8919800,"TotalAccepted":4607644,"AcceptanceRate":0.5165636000807193,"ContentFeatures":"","CodeSnippetFeatures":{"c":"","cpp":"","csharp":"","dart":"","elixir":"","erlang":"","golang":"","java":"","javascript":"","kotlin":"","php":"","python":"","python3":"","racket":"","ruby":"","rust":"","scala":"","swift":"","typescript":""},"Url":"https://leetcode.com/problems/valid-palindrome/"},"Solutions":{"se-gpt-4o":{"Lang":"python3","Prompt":"Hi, this is a coding interview. You will be given:\n* A problem statement (with sample test cases if available).\n* A starter code snippet (with fixed function signatures).\n\nPlease write your solution in the python3 programming language. Your code must:\n* Solve the problem fully and correctly.\n* Pass all provided sample test cases.\n* Run within acceptable time and memory limits (assume large inputs if none are specified).\n* Follow good coding practices (clear logic, readable structure, appropriate use of language features).\n\nHere is the problem statement: A phrase is a palindrome if, after converting all uppercase letters into lowercase letters and removing all non-alphanumeric characters, it reads the same forward and backward. Alphanumeric characters include letters and numbers.\nGiven a string s, return true if it is a palindrome, or false otherwise.\n \nExample 1:\nInput: s = \"A man, a plan, a canal: Panama\"\nOutput: true\nExplanation: \"amanaplanacanalpanama\" is a palindrome.\nExample 2:\nInput: s = \"race a car\"\nOutput: false\nExplanation: \"raceacar\" is not a palindrome.\nExample 3:\nInput: s = \" \"\nOutput: true\nExplanation: s is an empty string \"\" after removing non-alphanumeric characters.\nSince an empty string reads the same forward and backward, it is a palindrome.\n \nConstraints:\n\t1 <= s.length <= 2 * 10^5\n\ts consists only of printable ASCII characters.\n\nHere is the code snippet, which you should expand with your solution: class Solution:\n    def isPalindrome(self, s: str) -> bool:\n        \n\nImportant Requirements:\n* Do not change any provided function signatures, class names, or method names.\n* Output only valid source code that can be executed as-is, without any further improvements or bugfixes.\n* Do not include docstrings, markdown, or commentary in your final code.\n\nGood luck!\n","Answer":"```python\nclass Solution:\n    def isPalindrome(self, s: str) -> bool:\n        # Filter out non-alphanumeric characters and convert to lowercase\n        filtered_chars = [char.lower() for char in s if char.isalnum()]\n        \n        # Check if the filtered character list is a palindrome by comparison\n        return filtered_chars == filtered_chars[::-1]\n```","TypedCode":"\nclass Solution:\n    def isPalindrome(self, s: str) -> bool:\n        # Filter out non-alphanumeric characters and convert to lowercase\n        filtered_chars = [char.lower() for char in s if char.isalnum()]\n        \n        # Check if the filtered character list is a palindrome by comparison\n        return filtered_chars == filtered_chars[::-1]\n","Model":"gpt-4o-2024-08-06","Latency":1114049466,"SolvedAt":"2025-09-06T21:50:57.263953268+02:00","PromptTokens":403,"OutputTokens":77}},"Submissions":{"se-gpt-4o":{"SubmitRequest":{"lang":"python3","question_id":"125","typed_code":"\nclass Solution:\n    def isPalindrome(self, s: str) -> bool:\n        # Filter out non-alphanumeric characters and convert to lowercase\n        filtered_chars = [char.lower() for char in s if char.isalnum()]\n        \n        # Check if the filtered character list is a palindrome by comparison\n        return filtered_chars == filtered_chars[::-1]\n"},"SubmissionId":1761895901,"CheckResponse":{"status_code":10,"status_msg":"Accepted","Finished":true,"State":"SUCCESS"},"SubmittedAt":"2025-09-06T22:23:37.31324997+02:00"}}}
