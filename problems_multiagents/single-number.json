{"Question":{"Data":{"Question":{"questionFrontendId":"136","questionId":"136","Content":"<p>Given a <strong>non-empty</strong>&nbsp;array of integers <code>nums</code>, every element appears <em>twice</em> except for one. Find that single one.</p>\n\n<p>You must&nbsp;implement a solution with a linear runtime complexity and use&nbsp;only constant&nbsp;extra space.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">nums = [2,2,1]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">1</span></p>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">nums = [4,1,2,1,2]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">4</span></p>\n</div>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">nums = [1]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">1</span></p>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 3 * 10<sup>4</sup></code></li>\n\t<li><code>-3 * 10<sup>4</sup> &lt;= nums[i] &lt;= 3 * 10<sup>4</sup></code></li>\n\t<li>Each element in the array appears twice except for one element which appears only once.</li>\n</ul>\n","SampleTestCase":"[2,2,1]","ExampleTestcases":"[2,2,1]\n[4,1,2,1,2]\n[1]","Difficulty":"Easy","Title":"Single Number","TitleSlug":"single-number","IsPaidOnly":false,"Stats":"{\"totalAccepted\": \"3.9M\", \"totalSubmission\": \"5.1M\", \"totalAcceptedRaw\": 3886476, \"totalSubmissionRaw\": 5091898, \"acRate\": \"76.3%\"}","Likes":17865,"Dislikes":831,"FreqBar":0,"CategoryTitle":"Algorithms","TopicTags":[{"Id":"VG9waWNUYWdOb2RlOjU=","Name":"Array","Slug":"array"},{"Id":"VG9waWNUYWdOb2RlOjE5","Name":"Bit Manipulation","Slug":"bit-manipulation"}],"CodeSnippets":[{"Lang":"C++","LangSlug":"cpp","Code":"class Solution {\npublic:\n    int singleNumber(vector<int>& nums) {\n        \n    }\n};"},{"Lang":"Java","LangSlug":"java","Code":"class Solution {\n    public int singleNumber(int[] nums) {\n        \n    }\n}"},{"Lang":"Python","LangSlug":"python","Code":"class Solution(object):\n    def singleNumber(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"\n        "},{"Lang":"Python3","LangSlug":"python3","Code":"class Solution:\n    def singleNumber(self, nums: List[int]) -> int:\n        "},{"Lang":"C","LangSlug":"c","Code":"int singleNumber(int* nums, int numsSize) {\n    \n}"},{"Lang":"C#","LangSlug":"csharp","Code":"public class Solution {\n    public int SingleNumber(int[] nums) {\n        \n    }\n}"},{"Lang":"JavaScript","LangSlug":"javascript","Code":"/**\n * @param {number[]} nums\n * @return {number}\n */\nvar singleNumber = function(nums) {\n    \n};"},{"Lang":"TypeScript","LangSlug":"typescript","Code":"function singleNumber(nums: number[]): number {\n    \n};"},{"Lang":"PHP","LangSlug":"php","Code":"class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @return Integer\n     */\n    function singleNumber($nums) {\n        \n    }\n}"},{"Lang":"Swift","LangSlug":"swift","Code":"class Solution {\n    func singleNumber(_ nums: [Int]) -> Int {\n        \n    }\n}"},{"Lang":"Kotlin","LangSlug":"kotlin","Code":"class Solution {\n    fun singleNumber(nums: IntArray): Int {\n        \n    }\n}"},{"Lang":"Dart","LangSlug":"dart","Code":"class Solution {\n  int singleNumber(List<int> nums) {\n    \n  }\n}"},{"Lang":"Go","LangSlug":"golang","Code":"func singleNumber(nums []int) int {\n    \n}"},{"Lang":"Ruby","LangSlug":"ruby","Code":"# @param {Integer[]} nums\n# @return {Integer}\ndef single_number(nums)\n    \nend"},{"Lang":"Scala","LangSlug":"scala","Code":"object Solution {\n    def singleNumber(nums: Array[Int]): Int = {\n        \n    }\n}"},{"Lang":"Rust","LangSlug":"rust","Code":"impl Solution {\n    pub fn single_number(nums: Vec<i32>) -> i32 {\n        \n    }\n}"},{"Lang":"Racket","LangSlug":"racket","Code":"(define/contract (single-number nums)\n  (-> (listof exact-integer?) exact-integer?)\n  )"},{"Lang":"Erlang","LangSlug":"erlang","Code":"-spec single_number(Nums :: [integer()]) -> integer().\nsingle_number(Nums) ->\n  ."},{"Lang":"Elixir","LangSlug":"elixir","Code":"defmodule Solution do\n  @spec single_number(nums :: [integer]) :: integer\n  def single_number(nums) do\n    \n  end\nend"}],"CompanyTagStats":""}},"DownloadedAt":"2025-08-07T09:17:13.523711942+02:00","AcRate":"76.3","TotalSubmissions":5091898,"TotalAccepted":3886476,"AcceptanceRate":0.7632666640219423,"ContentFeatures":"","CodeSnippetFeatures":{"c":"","cpp":"","csharp":"","dart":"","elixir":"","erlang":"","golang":"","java":"","javascript":"","kotlin":"","php":"","python":"","python3":"","racket":"","ruby":"","rust":"","scala":"","swift":"","typescript":""},"Url":"https://leetcode.com/problems/single-number/"},"Solutions":{"se-gpt-4o":{"Lang":"python3","Prompt":"Multi-agent approach:\n1. Analysis\n2. Design\n3. Implementation\n4. Verification","Answer":"=== ANALYSIS ===\n```python\nclass Solution:\n    def singleNumber(self, nums: List[int]) -> int:\n        result = 0\n        for num in nums:\n            result ^= num\n        return result\n```\n\n=== DESIGN ===\n```python\nclass Solution:\n    def singleNumber(self, nums: List[int]) -> int:\n        # XOR approach\n        # Initialize result to 0\n        result = 0\n        \n        # Iterate over each number in nums\n        for num in nums:\n            # XOR current number with result\n            result ^= num\n        \n        # Return the single number that appears only once\n        return result\n```\n\n=== IMPLEMENTATION ===\n```python\nfrom typing import List\n\nclass Solution:\n    def singleNumber(self, nums: List[int]) -> int:\n        result = 0\n        for num in nums:\n            result ^= num\n        return result\n```\n\n=== VERIFICATION ===\n```python\nfrom typing import List\n\nclass Solution:\n    def singleNumber(self, nums: List[int]) -> int:\n        result = 0\n        for num in nums:\n            result ^= num\n        return result\n```\n\nVerification Report:\n\n1. **Correctness**: The code correctly implements the algorithm using the XOR operation. The XOR operation on numbers results in zero when the numbers are paired and leaves the single unpaired number as the result. This property is leveraged perfectly to solve the problem as stated.\n\n2. **Edge Cases**: The code handles all edge cases due to the properties of XOR:\n   - With only one number (`[1]`), the XOR operation will simply yield that number since there is nothing to cancel it out.\n   - For arrays with two copies of elements and one single element (e.g., `[2,2,1]` or `[4,1,2,1,2]`), the algorithm correctly finds the single number by effectively canceling out the paired elements.\n\n3. **Complexity**: The algorithm runs in O(n) time complexity, where n is the number of elements in the list, because it iterates through the list once. It uses O(1) constant space because it does not store any additional data structures; it only uses a single variable `result`.\n\n4. **Code Quality**: The code is clean, readable, and follows best practices. It utilizes Python's XOR operator appropriately and has a simple control flow with clearly named variables.\n\n5. **Test Cases**: Walking through the provided examples: \n   - For `nums = [2,2,1]`, the output is `1`, which matches the expected result.\n   - For `nums = [4,1,2,1,2]`, the output is `4`, as expected.\n   - For `nums = [1]`, the output is `1`, which is correct.\n\n6. **Potential Issues**: There are no visible bugs or logical errors in the code. It performs optimally for the scenario described. No improvements are necessary, as the solution meets the requirements perfectly.\n\nThe solution is correct, efficient, and follows good coding practices.\n\n","TypedCode":"\nfrom typing import List\n\nclass Solution:\n    def singleNumber(self, nums: List[int]) -> int:\n        result = 0\n        for num in nums:\n            result ^= num\n        return result\n","Model":"se-gpt-4o","Latency":6949587245,"SolvedAt":"2025-08-07T09:47:59.201109318+02:00","PromptTokens":2463,"OutputTokens":627}},"Submissions":{"se-gpt-4o":{"SubmitRequest":{"lang":"python3","question_id":"136","typed_code":"\nfrom typing import List\n\nclass Solution:\n    def singleNumber(self, nums: List[int]) -> int:\n        result = 0\n        for num in nums:\n            result ^= num\n        return result\n"},"SubmissionId":1726613778,"CheckResponse":{"status_code":10,"status_msg":"Accepted","Finished":true,"State":"SUCCESS"},"SubmittedAt":"2025-08-07T10:20:21.453328283+02:00"}}}
