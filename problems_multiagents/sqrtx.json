{"Question":{"Data":{"Question":{"questionFrontendId":"69","questionId":"69","Content":"<p>Given a non-negative integer <code>x</code>, return <em>the square root of </em><code>x</code><em> rounded down to the nearest integer</em>. The returned integer should be <strong>non-negative</strong> as well.</p>\n\n<p>You <strong>must not use</strong> any built-in exponent function or operator.</p>\n\n<ul>\n\t<li>For example, do not use <code>pow(x, 0.5)</code> in c++ or <code>x ** 0.5</code> in python.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> x = 4\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The square root of 4 is 2, so we return 2.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> x = 8\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The square root of 8 is 2.82842..., and since we round it down to the nearest integer, 2 is returned.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= x &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n","SampleTestCase":"4","ExampleTestcases":"4\n8","Difficulty":"Easy","Title":"Sqrt(x)","TitleSlug":"sqrtx","IsPaidOnly":false,"Stats":"{\"totalAccepted\": \"2.7M\", \"totalSubmission\": \"6.7M\", \"totalAcceptedRaw\": 2698654, \"totalSubmissionRaw\": 6651074, \"acRate\": \"40.6%\"}","Likes":9078,"Dislikes":4597,"FreqBar":0,"CategoryTitle":"Algorithms","TopicTags":[{"Id":"VG9waWNUYWdOb2RlOjg=","Name":"Math","Slug":"math"},{"Id":"VG9waWNUYWdOb2RlOjEx","Name":"Binary Search","Slug":"binary-search"}],"CodeSnippets":[{"Lang":"C++","LangSlug":"cpp","Code":"class Solution {\npublic:\n    int mySqrt(int x) {\n        \n    }\n};"},{"Lang":"Java","LangSlug":"java","Code":"class Solution {\n    public int mySqrt(int x) {\n        \n    }\n}"},{"Lang":"Python","LangSlug":"python","Code":"class Solution(object):\n    def mySqrt(self, x):\n        \"\"\"\n        :type x: int\n        :rtype: int\n        \"\"\"\n        "},{"Lang":"Python3","LangSlug":"python3","Code":"class Solution:\n    def mySqrt(self, x: int) -> int:\n        "},{"Lang":"C","LangSlug":"c","Code":"int mySqrt(int x) {\n    \n}"},{"Lang":"C#","LangSlug":"csharp","Code":"public class Solution {\n    public int MySqrt(int x) {\n        \n    }\n}"},{"Lang":"JavaScript","LangSlug":"javascript","Code":"/**\n * @param {number} x\n * @return {number}\n */\nvar mySqrt = function(x) {\n    \n};"},{"Lang":"TypeScript","LangSlug":"typescript","Code":"function mySqrt(x: number): number {\n    \n};"},{"Lang":"PHP","LangSlug":"php","Code":"class Solution {\n\n    /**\n     * @param Integer $x\n     * @return Integer\n     */\n    function mySqrt($x) {\n        \n    }\n}"},{"Lang":"Swift","LangSlug":"swift","Code":"class Solution {\n    func mySqrt(_ x: Int) -> Int {\n        \n    }\n}"},{"Lang":"Kotlin","LangSlug":"kotlin","Code":"class Solution {\n    fun mySqrt(x: Int): Int {\n        \n    }\n}"},{"Lang":"Dart","LangSlug":"dart","Code":"class Solution {\n  int mySqrt(int x) {\n    \n  }\n}"},{"Lang":"Go","LangSlug":"golang","Code":"func mySqrt(x int) int {\n    \n}"},{"Lang":"Ruby","LangSlug":"ruby","Code":"# @param {Integer} x\n# @return {Integer}\ndef my_sqrt(x)\n    \nend"},{"Lang":"Scala","LangSlug":"scala","Code":"object Solution {\n    def mySqrt(x: Int): Int = {\n        \n    }\n}"},{"Lang":"Rust","LangSlug":"rust","Code":"impl Solution {\n    pub fn my_sqrt(x: i32) -> i32 {\n        \n    }\n}"},{"Lang":"Racket","LangSlug":"racket","Code":"(define/contract (my-sqrt x)\n  (-> exact-integer? exact-integer?)\n  )"},{"Lang":"Erlang","LangSlug":"erlang","Code":"-spec my_sqrt(X :: integer()) -> integer().\nmy_sqrt(X) ->\n  ."},{"Lang":"Elixir","LangSlug":"elixir","Code":"defmodule Solution do\n  @spec my_sqrt(x :: integer) :: integer\n  def my_sqrt(x) do\n    \n  end\nend"}],"CompanyTagStats":""}},"DownloadedAt":"2025-08-07T09:18:41.57042036+02:00","AcRate":"40.6","TotalSubmissions":6651074,"TotalAccepted":2698654,"AcceptanceRate":0.405747101896626,"ContentFeatures":"","CodeSnippetFeatures":{"c":"","cpp":"","csharp":"","dart":"","elixir":"","erlang":"","golang":"","java":"","javascript":"","kotlin":"","php":"","python":"","python3":"","racket":"","ruby":"","rust":"","scala":"","swift":"","typescript":""},"Url":"https://leetcode.com/problems/sqrtx/"},"Solutions":{"se-gpt-4o":{"Lang":"python3","Prompt":"Multi-agent approach:\n1. Analysis\n2. Design\n3. Implementation\n4. Verification","Answer":"=== ANALYSIS ===\n```python\nclass Solution:\n    def mySqrt(self, x: int) -> int:\n        if x < 2:\n            return x\n        \n        left, right = 1, x // 2\n        \n        while left <= right:\n            mid = left + (right - left) // 2\n            mid_squared = mid * mid\n            \n            if mid_squared == x:\n                return mid\n            elif mid_squared < x:\n                left = mid + 1\n            else:\n                right = mid - 1\n                \n        return right\n```\n\n=== DESIGN ===\n```python\nclass Solution:\n    def mySqrt(self, x: int) -> int:\n        # Base cases for 0 and 1\n        if x < 2:\n            return x\n        \n        # Initialize the binary search boundaries\n        left, right = 1, x // 2\n        \n        # Perform binary search\n        while left <= right:\n            mid = left + (right - left) // 2\n            mid_squared = mid * mid\n            \n            # Check if we found the exact square root\n            if mid_squared == x:\n                return mid\n            # Adjust boundaries based on comparison\n            elif mid_squared < x:\n                left = mid + 1\n            else:\n                right = mid - 1\n        \n        # right will be the largest integer where right^2 <= x\n        return right\n```\n\n=== IMPLEMENTATION ===\n```python\nclass Solution:\n    def mySqrt(self, x: int) -> int:\n        if x < 2:\n            return x\n        \n        left, right = 1, x // 2\n        \n        while left <= right:\n            mid = left + (right - left) // 2\n            mid_squared = mid * mid\n            \n            if mid_squared == x:\n                return mid\n            elif mid_squared < x:\n                left = mid + 1\n            else:\n                right = mid - 1\n        \n        return right\n```\n\n=== VERIFICATION ===\n```python\nclass Solution:\n    def mySqrt(self, x: int) -> int:\n        if x < 2:\n            return x\n        \n        left, right = 1, x // 2\n        \n        while left <= right:\n            mid = left + (right - left) // 2\n            mid_squared = mid * mid\n            \n            if mid_squared == x:\n                return mid\n            elif mid_squared < x:\n                left = mid + 1\n            else:\n                right = mid - 1\n        \n        return right\n```\n\n","TypedCode":"\nclass Solution:\n    def mySqrt(self, x: int) -> int:\n        if x < 2:\n            return x\n        \n        left, right = 1, x // 2\n        \n        while left <= right:\n            mid = left + (right - left) // 2\n            mid_squared = mid * mid\n            \n            if mid_squared == x:\n                return mid\n            elif mid_squared < x:\n                left = mid + 1\n            else:\n                right = mid - 1\n        \n        return right\n","Model":"se-gpt-4o","Latency":12387794011,"SolvedAt":"2025-08-07T09:48:27.916719516+02:00","PromptTokens":2962,"OutputTokens":519}},"Submissions":{"se-gpt-4o":{"SubmitRequest":{"lang":"python3","question_id":"69","typed_code":"\nclass Solution:\n    def mySqrt(self, x: int) -> int:\n        if x < 2:\n            return x\n        \n        left, right = 1, x // 2\n        \n        while left <= right:\n            mid = left + (right - left) // 2\n            mid_squared = mid * mid\n            \n            if mid_squared == x:\n                return mid\n            elif mid_squared < x:\n                left = mid + 1\n            else:\n                right = mid - 1\n        \n        return right\n"},"SubmissionId":1726614157,"CheckResponse":{"status_code":10,"status_msg":"Accepted","Finished":true,"State":"SUCCESS"},"SubmittedAt":"2025-08-07T10:20:46.82333064+02:00"}}}
