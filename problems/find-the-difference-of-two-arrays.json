{"Question":{"Data":{"Question":{"questionFrontendId":"2215","questionId":"1392","Content":"<p>Given two <strong>0-indexed</strong> integer arrays <code>nums1</code> and <code>nums2</code>, return <em>a list</em> <code>answer</code> <em>of size</em> <code>2</code> <em>where:</em></p>\n\n<ul>\n\t<li><code>answer[0]</code> <em>is a list of all <strong>distinct</strong> integers in</em> <code>nums1</code> <em>which are <strong>not</strong> present in</em> <code>nums2</code><em>.</em></li>\n\t<li><code>answer[1]</code> <em>is a list of all <strong>distinct</strong> integers in</em> <code>nums2</code> <em>which are <strong>not</strong> present in</em> <code>nums1</code>.</li>\n</ul>\n\n<p><strong>Note</strong> that the integers in the lists may be returned in <strong>any</strong> order.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums1 = [1,2,3], nums2 = [2,4,6]\n<strong>Output:</strong> [[1,3],[4,6]]\n<strong>Explanation:\n</strong>For nums1, nums1[1] = 2 is present at index 0 of nums2, whereas nums1[0] = 1 and nums1[2] = 3 are not present in nums2. Therefore, answer[0] = [1,3].\nFor nums2, nums2[0] = 2 is present at index 1 of nums1, whereas nums2[1] = 4 and nums2[2] = 6 are not present in nums1. Therefore, answer[1] = [4,6].</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums1 = [1,2,3,3], nums2 = [1,1,2,2]\n<strong>Output:</strong> [[3],[]]\n<strong>Explanation:\n</strong>For nums1, nums1[2] and nums1[3] are not present in nums2. Since nums1[2] == nums1[3], their value is only included once and answer[0] = [3].\nEvery integer in nums2 is present in nums1. Therefore, answer[1] = [].\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums1.length, nums2.length &lt;= 1000</code></li>\n\t<li><code>-1000 &lt;= nums1[i], nums2[i] &lt;= 1000</code></li>\n</ul>\n","SampleTestCase":"[1,2,3]\n[2,4,6]","ExampleTestcases":"[1,2,3]\n[2,4,6]\n[1,2,3,3]\n[1,1,2,2]","Difficulty":"Easy","Title":"Find the Difference of Two Arrays","TitleSlug":"find-the-difference-of-two-arrays","IsPaidOnly":false,"Stats":"{\"totalAccepted\": \"551.6K\", \"totalSubmission\": \"681.7K\", \"totalAcceptedRaw\": 551577, \"totalSubmissionRaw\": 681657, \"acRate\": \"80.9%\"}","Likes":2529,"Dislikes":116,"FreqBar":0,"CategoryTitle":"Algorithms","TopicTags":[{"Id":"VG9waWNUYWdOb2RlOjU=","Name":"Array","Slug":"array"},{"Id":"VG9waWNUYWdOb2RlOjY=","Name":"Hash Table","Slug":"hash-table"}],"CodeSnippets":[{"Lang":"C++","LangSlug":"cpp","Code":"class Solution {\npublic:\n    vector<vector<int>> findDifference(vector<int>& nums1, vector<int>& nums2) {\n        \n    }\n};"},{"Lang":"Java","LangSlug":"java","Code":"class Solution {\n    public List<List<Integer>> findDifference(int[] nums1, int[] nums2) {\n        \n    }\n}"},{"Lang":"Python","LangSlug":"python","Code":"class Solution(object):\n    def findDifference(self, nums1, nums2):\n        \"\"\"\n        :type nums1: List[int]\n        :type nums2: List[int]\n        :rtype: List[List[int]]\n        \"\"\"\n        "},{"Lang":"Python3","LangSlug":"python3","Code":"class Solution:\n    def findDifference(self, nums1: List[int], nums2: List[int]) -> List[List[int]]:\n        "},{"Lang":"C","LangSlug":"c","Code":"/**\n * Return an array of arrays of size *returnSize.\n * The sizes of the arrays are returned as *returnColumnSizes array.\n * Note: Both returned array and *columnSizes array must be malloced, assume caller calls free().\n */\nint** findDifference(int* nums1, int nums1Size, int* nums2, int nums2Size, int* returnSize, int** returnColumnSizes) {\n    \n}"},{"Lang":"C#","LangSlug":"csharp","Code":"public class Solution {\n    public IList<IList<int>> FindDifference(int[] nums1, int[] nums2) {\n        \n    }\n}"},{"Lang":"JavaScript","LangSlug":"javascript","Code":"/**\n * @param {number[]} nums1\n * @param {number[]} nums2\n * @return {number[][]}\n */\nvar findDifference = function(nums1, nums2) {\n    \n};"},{"Lang":"TypeScript","LangSlug":"typescript","Code":"function findDifference(nums1: number[], nums2: number[]): number[][] {\n    \n};"},{"Lang":"PHP","LangSlug":"php","Code":"class Solution {\n\n    /**\n     * @param Integer[] $nums1\n     * @param Integer[] $nums2\n     * @return Integer[][]\n     */\n    function findDifference($nums1, $nums2) {\n        \n    }\n}"},{"Lang":"Swift","LangSlug":"swift","Code":"class Solution {\n    func findDifference(_ nums1: [Int], _ nums2: [Int]) -> [[Int]] {\n        \n    }\n}"},{"Lang":"Kotlin","LangSlug":"kotlin","Code":"class Solution {\n    fun findDifference(nums1: IntArray, nums2: IntArray): List<List<Int>> {\n        \n    }\n}"},{"Lang":"Dart","LangSlug":"dart","Code":"class Solution {\n  List<List<int>> findDifference(List<int> nums1, List<int> nums2) {\n    \n  }\n}"},{"Lang":"Go","LangSlug":"golang","Code":"func findDifference(nums1 []int, nums2 []int) [][]int {\n    \n}"},{"Lang":"Ruby","LangSlug":"ruby","Code":"# @param {Integer[]} nums1\n# @param {Integer[]} nums2\n# @return {Integer[][]}\ndef find_difference(nums1, nums2)\n    \nend"},{"Lang":"Scala","LangSlug":"scala","Code":"object Solution {\n    def findDifference(nums1: Array[Int], nums2: Array[Int]): List[List[Int]] = {\n        \n    }\n}"},{"Lang":"Rust","LangSlug":"rust","Code":"impl Solution {\n    pub fn find_difference(nums1: Vec<i32>, nums2: Vec<i32>) -> Vec<Vec<i32>> {\n        \n    }\n}"},{"Lang":"Racket","LangSlug":"racket","Code":"(define/contract (find-difference nums1 nums2)\n  (-> (listof exact-integer?) (listof exact-integer?) (listof (listof exact-integer?)))\n  )"},{"Lang":"Erlang","LangSlug":"erlang","Code":"-spec find_difference(Nums1 :: [integer()], Nums2 :: [integer()]) -> [[integer()]].\nfind_difference(Nums1, Nums2) ->\n  ."},{"Lang":"Elixir","LangSlug":"elixir","Code":"defmodule Solution do\n  @spec find_difference(nums1 :: [integer], nums2 :: [integer]) :: [[integer]]\n  def find_difference(nums1, nums2) do\n    \n  end\nend"}],"CompanyTagStats":""}},"DownloadedAt":"2025-07-18T14:50:19.960717876+02:00","AcRate":"80.9","TotalSubmissions":681657,"TotalAccepted":551577,"AcceptanceRate":0.8091708879979227,"ContentFeatures":"","CodeSnippetFeatures":{"c":"","cpp":"","csharp":"","dart":"","elixir":"","erlang":"","golang":"","java":"","javascript":"","kotlin":"","php":"","python":"","python3":"","racket":"","ruby":"","rust":"","scala":"","swift":"","typescript":""},"Url":"https://leetcode.com/problems/find-the-difference-of-two-arrays/"},"Solutions":{"se-gpt-4o":{"Lang":"python3","Prompt":"Hi, this is a coding interview. You will be given:\n* A problem statement (with sample test cases if available).\n* A starter code snippet (with fixed function signatures).\n\nPlease write your solution in the python3 programming language. Your code must:\n* Solve the problem fully and correctly.\n* Pass all provided sample test cases.\n* Run within acceptable time and memory limits (assume large inputs if none are specified).\n* Follow good coding practices (clear logic, readable structure, appropriate use of language features).\n\nHere is the problem statement: Given two 0-indexed integer arrays nums1 and nums2, return a list answer of size 2 where:\n\tanswer[0] is a list of all distinct integers in nums1 which are not present in nums2.\n\tanswer[1] is a list of all distinct integers in nums2 which are not present in nums1.\nNote that the integers in the lists may be returned in any order.\n \nExample 1:\nInput: nums1 = [1,2,3], nums2 = [2,4,6]\nOutput: [[1,3],[4,6]]\nExplanation:\nFor nums1, nums1[1] = 2 is present at index 0 of nums2, whereas nums1[0] = 1 and nums1[2] = 3 are not present in nums2. Therefore, answer[0] = [1,3].\nFor nums2, nums2[0] = 2 is present at index 1 of nums1, whereas nums2[1] = 4 and nums2[2] = 6 are not present in nums1. Therefore, answer[1] = [4,6].\nExample 2:\nInput: nums1 = [1,2,3,3], nums2 = [1,1,2,2]\nOutput: [[3],[]]\nExplanation:\nFor nums1, nums1[2] and nums1[3] are not present in nums2. Since nums1[2] == nums1[3], their value is only included once and answer[0] = [3].\nEvery integer in nums2 is present in nums1. Therefore, answer[1] = [].\n \nConstraints:\n\t1 <= nums1.length, nums2.length <= 1000\n\t-1000 <= nums1[i], nums2[i] <= 1000\n\nHere is the code snippet, which you should expand with your solution: class Solution:\n    def findDifference(self, nums1: List[int], nums2: List[int]) -> List[List[int]]:\n        \n\nImportant Requirements:\n* Do not change any provided function signatures, class names, or method names.\n* Output only valid source code that can be executed as-is, without any further improvements or bugfixes.\n* Do not include docstrings, markdown, or commentary in your final code.\n\nGood luck!\n","Answer":"```python\nclass Solution:\n    def findDifference(self, nums1: List[int], nums2: List[int]) -> List[List[int]]:\n        set1 = set(nums1)\n        set2 = set(nums2)\n        \n        diff1 = list(set1 - set2)\n        diff2 = list(set2 - set1)\n        \n        return [diff1, diff2]\n```","TypedCode":"\nclass Solution:\n    def findDifference(self, nums1: List[int], nums2: List[int]) -> List[List[int]]:\n        set1 = set(nums1)\n        set2 = set(nums2)\n        \n        diff1 = list(set1 - set2)\n        diff2 = list(set2 - set1)\n        \n        return [diff1, diff2]\n","Model":"gpt-4o-2024-08-06","Latency":1303119889,"SolvedAt":"2025-07-18T15:07:45.753560917+02:00","PromptTokens":603,"OutputTokens":80}},"Submissions":{"se-gpt-4o":{"SubmitRequest":{"lang":"python3","question_id":"1392","typed_code":"\nclass Solution:\n    def findDifference(self, nums1: List[int], nums2: List[int]) -> List[List[int]]:\n        set1 = set(nums1)\n        set2 = set(nums2)\n        \n        diff1 = list(set1 - set2)\n        diff2 = list(set2 - set1)\n        \n        return [diff1, diff2]\n"},"SubmissionId":1725388726,"CheckResponse":{"status_code":10,"status_msg":"Accepted","Finished":true,"State":"SUCCESS"},"SubmittedAt":"2025-08-06T10:18:44.758246649+02:00"}}}
